#!/sbin/runscript

# Default values for variables defined in sage-notebook-server.conf
: ${user:=sage}
: ${accounts:=False}
: ${interface-localhost}
: ${port:=8000}
: ${secure:=False}
: ${require_login:=True}
: ${accounts:=False}
: ${timeout:=0}

user_home=$(eval cd ~${user} && pwd)
pidfile="${user_home}"/.sage/sage_notebook.sagenb/twistd.pid
command_args=( 
	-notebook
	accounts=${accounts}
	interface=${interface}
	open_viewer=False
	port=${port}
	require_login=${require_login}
	secure=${secure}
	timeout=${timeout}
)

: ${stdout:="${user_home}"/sagenb.log}
: ${stderr:="${user_home}"/sagenb.err}

depend() {
	need net
}

start() {
	# TODO: Add addtional code to detect different startup failures based on
	# standard output
	if [ ! -f "${user_home}"/.sage/sage_notebook.sagenb/users.pickle ] ; then
		eend 1 "Did not find user database - configure Sage's Notebook first:"
		einfo "1. Configure the ${RC_SVCNAME}'s configuration file in: "
		einfo "     /etc/conf.d/${RC_SVCNAME}.conf"
		einfo "2. Switch to the user specified in the configuration file above."
		einfo "   Based on your current settings this is done by:"
		einfo "     su ${user}"
		einfo "3. Run the Notebook with the commands specified in the"
		einfo "   configuration file. Based on your current settings this would"
		einfo "   be:"
		einfo ""
		einfo "   sage ${command_args[@]}"
		return 1
	fi

	ebegin "Starting Sage's Notebook server"
	start-stop-daemon \
		--start \
		--background \
		--stdout "${stdout}" \
		--stderr "${stderr}" \
		--pidfile "${pidfile}" \
		--user ${user} \
		--exec /usr/bin/sage \
		-- "${command_args[@]}"
	eend $? "Failed to start Sage's Notebook server"
}

stop() {
	ebegin "Stopping Sage's Notebook server"
	start-stop-daemon \
		--stop \
		--pidfile "${pidfile}" \
		--user ${user}
	eend $? "Failed to stop Sage's Notebook server"
}
