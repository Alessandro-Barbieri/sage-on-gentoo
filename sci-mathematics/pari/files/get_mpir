_mpir_list="mpir GMPLIBS GMPINCLUDE"
mpir=
if test -n "$with_mpir"; then
  with_mpir_lib="$with_mpir_lib $with_mpir/lib"
  with_mpir_include="$with_mpir_include $with_mpir/include"
fi
if test -z "$without_mpir"; then
  mpir_add="$TOP/mpir-$osname-$arch $TOP/mpir"
  pth="$with_mpir_lib $mpir_add $libpth"
  lib=mpir; . ./locatelib
fi

if test -n "$mpir"; then
  pth="$with_mpir_include\
      /usr/local/include\
      /usr/include\
      /opt/include\
      /opt/local/include\
      /opt/gnu/include\
  "
  x=`./locate 'mpir.h' '' $pth`
  case $x in
   ?:/*|/*) mpir_include=`dirname $x`
     echo ..."Found mpir header in $mpir_include"
     ;;
    *) echo ..."But no header file has been found"
       mpir=;;
  esac
fi

if test -n "$mpir"; then
  GMPINCLUDE="-I$mpir_include"
  GMPLIBS="-L$mpir -lmpir"
  LIBS="$LIBS $GMPLIBS"

  exe=$osname-$arch-rlv$$
  $CC $extraflag $GMPINCLUDE -o $exe mpir_version.c $GMPLIBS 2> /dev/null
  if test -r $exe; then
    mpir_version=`env LD_LIBRARY_PATH="$LD_LIBRARY_PATH$dir_sep$mpir" $exe`;
  else
    echo "### Your version of MPIR is too old for PARI. Please upgrade"
    mpir=
  fi
  rm -f $exe $exe$exe_suff
fi

if test -z "$mpir"; then
  echo "### Building without MPIR support"
else
  if test "$fastread" = yes; then
    echo "Using MPIR, version $mpir_version"
  else
    cat << EOM
==========================================================================
MPIR is a fork of the GNU MP library and can be used in its place. 
The GNU MP library can be used as an alternate multiprecision kernel, which
is faster than PARI's native one as soon as integers larger than 10^100
are considered. Unfortunately, with GNU MP, libpari is binary incompatible
with the native one. Despite this, you should only answer 'no' to the
following question if you plan to use libpari (not only the gp shell)
and have stringent backward compatibility requirements.
EOM
    echo $n "Do you want to use MPIR library instead of the native kernel? $c"
    if test "$with_mpir" = yes; then dflt=y; else dflt=n; fi
    rep='y n'; . ./myread
    case $ans in
      n) mpir=;;
    esac
  fi
fi

if test -n "$mpir"; then
  case "$pretty" in
    *GMP*)
      pretty=`echo $pretty | sed "s,GMP,MPIR-$mpir_version,"` ;;
    /$kernlvl1)
      pretty=`echo $pretty | sed "s,$kernlvl1,MPIR-$mpir_version,"` ;;
    *)
      pretty=`echo $pretty | sed "s, *kernel,/MPIR-$mpir_version kernel,"` ;;
  esac
  kernlvl1=gmp
fi
