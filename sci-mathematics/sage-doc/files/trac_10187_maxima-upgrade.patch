diff -r 48c661a3d3a4 -r 85e0f73986c4 sage/interfaces/maxima.py
--- a/sage/interfaces/maxima.py	Fri Oct 29 18:09:29 2010 +0100
+++ b/sage/interfaces/maxima.py	Fri Oct 29 21:51:07 2010 +0100
@@ -544,10 +544,11 @@
         self._prompt_wait = [self._prompt] + [re.compile(x) for x in self._ask] + \
                             ['Break [0-9]+'] #note that you might need to change _expect_expr if you
                                              #change this
-        self._error_re = re.compile('(Principal Value|debugmode|Incorrect syntax|Maxima encountered a Lisp error)')
+        self._error_re = re.compile('(Principal Value|debugmode|incorrect syntax|Maxima encountered a Lisp error)')
         self._display2d = False
 
 
+
     def _function_class(self):
         """
         EXAMPLES::
@@ -728,10 +729,12 @@
         
             sage: maxima._eval_line('1+1;')
             '2'
-            sage: maxima.eval('sage0: x == x;')
+            sage: maxima._eval_line('sage0: x == x;')
             Traceback (most recent call last):
             ...
-            TypeError: error evaluating "sage0: x == x;":...
+            TypeError: Error executing code in Maxima...
+
+
         """
         if len(line) == 0:
             return ''
@@ -750,21 +753,47 @@
         else:
             self._sendline(line)
 
+        line_echo = self._expect.readline()
         if not wait_for_prompt:
             return
+        assert line_echo.strip() == line.strip()
 
-        self._expect_expr(self._display_prompt)
-        pre_out = self._before()
-        self._expect_expr()
-        out = self._before()
+        # This broke in maxima-5.22.1 as discussed in http://trac.sagemath.org/sage_trac/ticket/10187
+        #self._expect_expr(self._display_prompt)
+        #pre_out = self._before()
+        #self._expect_expr()
+        #out = self._before()
+        #
+        # if error_check:
+        #     self._error_check(line, pre_out)
+        #     self._error_check(line, out)
+        #
+        # if not reformat:
+        #     return out
+        #
+        # r = self._output_prompt_re
+        # m = r.search(out)
+        # if m is None:
+        #     o = out[:-2]
+        # else:
+        #     o = out[m.end()+1:-2]
+        # o = ''.join([x.strip() for x in o.split()])
+        # return o
+        #
+        # i = o.rfind('(%o')
+        # return o[:i]
 
+        self._expect_expr(self._display_prompt)   
+        out = self._before()        # input echo + output prompt + output
         if error_check:
-            self._error_check(line, pre_out)
             self._error_check(line, out)
-        
+
         if not reformat:
             return out
-        
+
+        self._expect_expr()
+        assert len(self._before())==0, 'Maxima expect interface is confused!'
+
         r = self._output_prompt_re
         m = r.search(out)
         if m is None:
@@ -774,10 +803,7 @@
         o = ''.join([x.strip() for x in o.split()])
         return o
 
-        i = o.rfind('(%o')
-        return o[:i]
-
-
+        
     def _synchronize(self):
         """
         Synchronize pexpect interface.
@@ -884,7 +910,7 @@
             res = p.stdout.read()
             # we are now getting three lines of commented verbosity
             # every time Maxima starts, so we need to get rid of them
-            for _ in range(3):
+            for _ in range(5):
                 res = res[res.find('\n')+1:]
             return AsciiArtString(res)
         else:
@@ -1240,7 +1266,7 @@
         EXAMPLES::
         
             sage: maxima.version()
-            '5.20.1'
+            '5.22.1'
         """
         return maxima_version()
 
