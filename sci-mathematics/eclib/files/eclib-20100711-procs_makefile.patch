--- procs/Makefile.orig	2010-03-01 13:14:52.000000000 +1300
+++ procs/Makefile	2010-08-17 23:14:34.783937237 +1200
@@ -19,7 +19,8 @@
 LIBBASE = libjcntl
 NTLCFLAGS = -DNTL_ALL -I$(NTLINCDIR)
 NTLLFLAGS = -L$(NTLLIBDIR) -lntl -lgmp -lpari
-OBJ_SUF = _n
+OBJ_SUF = _n.o
+SOBJ_SUF = _n.lo
 else
 LIBBASE = libjc.a
 NTLCFLAGS =
@@ -40,33 +41,57 @@
 
 DOTCCS = interface.cc unimod.cc arith.cc marith.cc gpslave.cc compproc.cc vec.cc vector.cc mat.cc matrix.cc sub.cc subspace.cc kbessel.cc mvector.cc mmatrix.cc msubspace.cc vectest.cc mvectest.cc mattest.cc mmattest.cc space.cc mspace.cc comptest.cc rattest.cc bigrattest.cc ptest.cc mptest.cc tbessel.cc svec.cc svector.cc svectest.cc smat.cc smatrix.cc smattest.cc random.cc smat_elim.cc smatrix_elim.cc xsplit.cc conic.cc tconic.cc legendre.cc quadratic.cc illl.cc hilbert.cc thilbert.cc tleg.cc timer.cc cubic.cc polys.cc realroots.cc parifact.cc rcubic.cc lcubic.cc p2points.cc tp2points.cc gf.cc
 
-ARITH_OBJS  = arith$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o unimod$(OBJ_SUF).o quadratic$(OBJ_SUF).o cubic$(OBJ_SUF).o illl$(OBJ_SUF).o hilbert$(OBJ_SUF).o parifact$(OBJ_SUF).o p2points$(OBJ_SUF).o
-TRANS_OBJS =  compproc$(OBJ_SUF).o kbessel$(OBJ_SUF).o
-#XSPLIT_OBJS = xsplit0$(OBJ_SUF).o xsplit1$(OBJ_SUF).o xsplit2$(OBJ_SUF).o xsplit5$(OBJ_SUF).o xsplit6$(OBJ_SUF).o
-XSPLIT_OBJS = xsplit2$(OBJ_SUF).o # temporary
-LINALG_OBJS = vector$(OBJ_SUF).o matrix$(OBJ_SUF).o subspace$(OBJ_SUF).o
-MLINALG_OBJS = mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o msubspace$(OBJ_SUF).o
-SMAT_OBJS = smatrix$(OBJ_SUF).o smatrix_elim$(OBJ_SUF).o
-SVEC_OBJS = svector$(OBJ_SUF).o
-
-OBJS = interface$(OBJ_SUF).o $(ARITH_OBJS) $(TRANS_OBJS) $(LINALG_OBJS) $(MLINALG_OBJS) $(XSPLIT_OBJS) timer$(OBJ_SUF).o $(SVEC_OBJS) $(SMAT_OBJS) polys$(OBJ_SUF).o realroots$(OBJ_SUF).o gf$(OBJ_SUF).o  
+ARITH_OBJS  = arith$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) unimod$(OBJ_SUF) quadratic$(OBJ_SUF) cubic$(OBJ_SUF) illl$(OBJ_SUF) hilbert$(OBJ_SUF) parifact$(OBJ_SUF) p2points$(OBJ_SUF)
+TRANS_OBJS =  compproc$(OBJ_SUF) kbessel$(OBJ_SUF)
+#XSPLIT_OBJS = xsplit0$(OBJ_SUF) xsplit1$(OBJ_SUF) xsplit2$(OBJ_SUF) xsplit5$(OBJ_SUF) xsplit6$(OBJ_SUF)
+XSPLIT_OBJS = xsplit2$(OBJ_SUF) # temporary
+LINALG_OBJS = vector$(OBJ_SUF) matrix$(OBJ_SUF) subspace$(OBJ_SUF)
+MLINALG_OBJS = mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) msubspace$(OBJ_SUF)
+SMAT_OBJS = smatrix$(OBJ_SUF) smatrix_elim$(OBJ_SUF)
+SVEC_OBJS = svector$(OBJ_SUF)
+
+OBJS = interface$(OBJ_SUF) $(ARITH_OBJS) $(TRANS_OBJS) $(LINALG_OBJS) $(MLINALG_OBJS) $(XSPLIT_OBJS) timer$(OBJ_SUF) $(SVEC_OBJS) $(SMAT_OBJS) polys$(OBJ_SUF) realroots$(OBJ_SUF) gf$(OBJ_SUF)
+
+ARITH_SOBJS  = arith$(SOBJ_SUF) marith$(SOBJ_SUF) gpslave$(SOBJ_SUF) conic$(SOBJ_SUF) legendre$(SOBJ_SUF) \
+	unimod$(SOBJ_SUF) quadratic$(SOBJ_SUF) cubic$(SOBJ_SUF) illl$(SOBJ_SUF) hilbert$(SOBJ_SUF) \
+	parifact$(SOBJ_SUF) p2points$(SOBJ_SUF)
+TRANS_SOBJS =  compproc$(SOBJ_SUF) kbessel$(SOBJ_SUF)
+XSPLIT_SOBJS = xsplit2$(SOBJ_SUF) # temporary
+LINALG_SOBJS = vector$(SOBJ_SUF) matrix$(SOBJ_SUF) subspace$(SOBJ_SUF)
+MLINALG_SOBJS = mvector$(SOBJ_SUF) mmatrix$(SOBJ_SUF) msubspace$(SOBJ_SUF)
+SMAT_SOBJS = smatrix$(SOBJ_SUF) smatrix_elim$(SOBJ_SUF)
+SVEC_SOBJS = svector$(SOBJ_SUF)
+
+SOBJS = interface$(SOBJ_SUF) $(ARITH_SOBJS) $(TRANS_SOBJS) $(LINALG_SOBJS) $(MLINALG_SOBJS) \
+	$(XSPLIT_SOBJS) timer$(SOBJ_SUF) $(SVEC_SOBJS) $(SMAT_SOBJS) polys$(SOBJ_SUF) \
+	realroots$(SOBJ_SUF) gf$(SOBJ_SUF)
 
 TESTS = vectest1 vectest2 mattest1 mattest2 space1 space2 smattest comptest rattest bigrattest ptest mptest tbessel mvectest mmattest mspace tconic tleg thilbert rcubic lcubic svectest1 svectest2 tp2points
 
+#template for compiling *.cc -> *$(OBJ_SUF) :all: $(OBJS)
+.SUFFIXES: .cc $(OBJ_SUF) $(SOBJ_SUF)
+
+ .cc$(OBJ_SUF):
+	$(CXX) $(CFLAGS) $< -o $@
+
+ .cc$(SOBJ_SUF):
+	$(CXX) $(PICFLAG) $(CFLAGS) $< -o $@
+
 all: $(OBJS)
 
 tests: $(TESTS)
-progs: $(TESTS)
+progs: tests
 
 headers: $(HEADERS)
 objs: $(OBJS)
-sources: $(HEADERS) $(DOTCCS)
+dotccs: $(DOTCSC)
+sources: headers dotccs
 
-lib: headers objs
+lib: objs
 	ar r $(LIBNAME) $(OBJS)
 	$(RANLIB) $(LIBNAME)
 
-install: sources lib
+install: headers dotccs lib
 	chmod a+r *
 	(cd $(INCDIR); rm -f $(HEADERS))
 	$(CP) $(HEADERS) $(INCDIR)
@@ -83,18 +108,18 @@
 	$(CP) $(DISTFILES) $(HOME)/curves/rankdist
 	chmod 644 $(HOME)/curves/rankdist/*
 
-g0ndist: sources
+g0ndist: headers dotccs
 	 $(CP) $(HEADERS) $(HOME)/curves/g0ndist
 	 $(CP) $(DOTCCS) $(HOME)/curves/g0ndist
 	 chmod 644 $(HOME)/curves/g0ndist/*
 
 clean:
-	/bin/rm -f *$(OBJ_SUF).o *~ *.a *.so *.dylib
+	/bin/rm -f *$(OBJ_SUF) *$(SOBJ_SUF) *~ *.a *.so *.dylib
 
 veryclean: clean
 	(cd $(BINDIR); /bin/rm -f $(TESTS) $(PROGS))
 
-shar: sources
+shar: headers dotccs
 	rm -f procs.shar procs.shar.Z procs.shar.gz
 	shar -i files -o procs.shar
 	gzip procs.shar
@@ -104,7 +129,7 @@
 	tar -cvf procs.tar -I files
 	gzip procs.tar
 
-check: $(TESTS)
+check: tests
 	rm -f PRIMES t 1
 	./vectest1 < vectest.in >  t && diff t vectest.out
 	./vectest2 < vectest.in >  t && diff t vectest.out
@@ -122,7 +147,7 @@
 	./bigrattest < bigrattest.in > t && diff t bigrattest.out
 	./ptest < ptest.in > t && diff t ptest.out
 	./mptest < mptest.in > t && diff t mptest.out
-	./tconic < tconic.in > t && diff t tconic.out
+	$(BINDIR)/tconic < tconic.in > t && diff t tconic.out
 	./tleg < tleg.in > t && diff t tleg.out
 	./thilbert < thilbert.in > t && diff t thilbert.out
 	./rcubic < rcubic.in > t && diff t rcubic.out
@@ -130,110 +155,110 @@
 	./tp2points < tp2points.in > t && diff t tp2points.out
 	rm -f PRIMES t 1
 
-vectest1: vectest.cc vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 vectest.cc -o vectest1$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/vectest1 vectest1$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+vectest1: vectest.cc vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 vectest.cc -o vectest1$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o vectest1 vectest1$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-vectest2: vectest.cc vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 vectest.cc -o vectest2$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/vectest2 vectest2$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+vectest2: vectest.cc vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 vectest.cc -o vectest2$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o vectest2 vectest2$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-mattest1: mattest.cc matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o timer$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 mattest.cc -o mattest1$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/mattest1 mattest1$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o timer$(OBJ_SUF).o $(LFLAGS)
+mattest1: mattest.cc matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) timer$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 mattest.cc -o mattest1$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o mattest1 mattest1$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) timer$(OBJ_SUF) $(LFLAGS)
 
-mattest2: mattest.cc matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o timer$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 mattest.cc -o mattest2$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/mattest2 mattest2$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o timer$(OBJ_SUF).o $(LFLAGS)
+mattest2: mattest.cc matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) timer$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 mattest.cc -o mattest2$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o mattest2 mattest2$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) timer$(OBJ_SUF) $(LFLAGS)
 
-space1: space.cc subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 space.cc -o space1$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/space1 space1$(OBJ_SUF).o subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o \
-	 interface$(OBJ_SUF).o $(LFLAGS)
+space1: space.cc subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 space.cc -o space1$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o space1 space1$(OBJ_SUF) subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) \
+	 interface$(OBJ_SUF) $(LFLAGS)
 
-space2: space.cc subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 space.cc -o space2$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/space2 space2$(OBJ_SUF).o subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o \
-	interface$(OBJ_SUF).o $(LFLAGS)
+space2: space.cc subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 space.cc -o space2$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o space2 space2$(OBJ_SUF) subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) \
+	interface$(OBJ_SUF) $(LFLAGS)
 
-mvectest: mvectest$(OBJ_SUF).o mvector$(OBJ_SUF).o vector$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/mvectest mvectest$(OBJ_SUF).o mvector$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o  \
-	compproc$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+mvectest: mvectest$(OBJ_SUF) mvector$(OBJ_SUF) vector$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o mvectest mvectest$(OBJ_SUF) mvector$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF)  \
+	compproc$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-svectest1: svectest.cc svector$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 svectest.cc -o svectest1$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/svectest1 svectest1$(OBJ_SUF).o svector$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+svectest1: svectest.cc svector$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=1 svectest.cc -o svectest1$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o svectest1 svectest1$(OBJ_SUF) svector$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-svectest2: svectest.cc svector$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 svectest.cc -o svectest2$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/svectest2 svectest2$(OBJ_SUF).o svector$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+svectest2: svectest.cc svector$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(CFLAGS) -DSCALAR_OPTION=2 svectest.cc -o svectest2$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o svectest2 svectest2$(OBJ_SUF) svector$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-#svectest: svectest$(OBJ_SUF).o svec$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o
-#	$(CXX) -o $(BINDIR)/svectest svectest$(OBJ_SUF).o svec$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o $(LFLAGS)
+#svectest: svectest$(OBJ_SUF) svec$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF)
+#	$(CXX) $(LDFLAGS) -o $(BINDIR)/svectest svectest$(OBJ_SUF) svec$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) $(LFLAGS)
 
-lintest: lintest$(OBJ_SUF).o linsyst$(OBJ_SUF).o linear$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/lintest lintest$(OBJ_SUF).o linsyst$(OBJ_SUF).o linear$(OBJ_SUF).o $(LFLAGS)
+lintest: lintest$(OBJ_SUF) linsyst$(OBJ_SUF) linear$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o lintest lintest$(OBJ_SUF) linsyst$(OBJ_SUF) linear$(OBJ_SUF) $(LFLAGS)
 
-mmattest: mmattest$(OBJ_SUF).o mmatrix$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o mvector$(OBJ_SUF).o arith$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/mmattest mmattest$(OBJ_SUF).o  mmatrix$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o \
-	mvector$(OBJ_SUF).o arith$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+mmattest: mmattest$(OBJ_SUF) mmatrix$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) mvector$(OBJ_SUF) arith$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o mmattest mmattest$(OBJ_SUF)  mmatrix$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) \
+	mvector$(OBJ_SUF) arith$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-smattest: smattest$(OBJ_SUF).o smatrix_elim$(OBJ_SUF).o svector$(OBJ_SUF).o smatrix$(OBJ_SUF).o subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o 
-	  $(CXX) -Wall -g -o $(BINDIR)/smattest smattest$(OBJ_SUF).o smatrix_elim$(OBJ_SUF).o svector$(OBJ_SUF).o smatrix$(OBJ_SUF).o subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o $(LFLAGS)
+smattest: smattest$(OBJ_SUF) smatrix_elim$(OBJ_SUF) svector$(OBJ_SUF) smatrix$(OBJ_SUF) subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF)
+	  $(CXX) -Wall -g -o smattest smattest$(OBJ_SUF) smatrix_elim$(OBJ_SUF) svector$(OBJ_SUF) smatrix$(OBJ_SUF) subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) $(LFLAGS)
 
-smat2test: smat2test$(OBJ_SUF).o smatrix2_elim$(OBJ_SUF).o svector$(OBJ_SUF).o smatrix2$(OBJ_SUF).o subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o 
-	  $(CXX) -Wall -g -o $(BINDIR)/smat2test smat2test$(OBJ_SUF).o smatrix2_elim$(OBJ_SUF).o svector$(OBJ_SUF).o smatrix2$(OBJ_SUF).o subspace$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o $(LFLAGS)
+smat2test: smat2test$(OBJ_SUF) smatrix2_elim$(OBJ_SUF) svector$(OBJ_SUF) smatrix2$(OBJ_SUF) subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF)
+	  $(CXX) -Wall -g -o smat2test smat2test$(OBJ_SUF) smatrix2_elim$(OBJ_SUF) svector$(OBJ_SUF) smatrix2$(OBJ_SUF) subspace$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) $(LFLAGS)
 
-matxtest: matxtest$(OBJ_SUF).o  matx$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/matxtest matxtest$(OBJ_SUF).o  matx$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o $(LFLAGS)
+matxtest: matxtest$(OBJ_SUF)  matx$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o matxtest matxtest$(OBJ_SUF)  matx$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) $(LFLAGS)
 
-mspace: mspace$(OBJ_SUF).o msubspace$(OBJ_SUF).o mmatrix$(OBJ_SUF).o mvector$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o compproc$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o 
-	$(CXX) -o $(BINDIR)/mspace mspace$(OBJ_SUF).o msubspace$(OBJ_SUF).o mmatrix$(OBJ_SUF).o mvector$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o \
-	 parifact$(OBJ_SUF).o compproc$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+mspace: mspace$(OBJ_SUF) msubspace$(OBJ_SUF) mmatrix$(OBJ_SUF) mvector$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) compproc$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o mspace mspace$(OBJ_SUF) msubspace$(OBJ_SUF) mmatrix$(OBJ_SUF) mvector$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) \
+	 parifact$(OBJ_SUF) compproc$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-periods: periods$(OBJ_SUF).o parifact$(OBJ_SUF).o compproc$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/periods periods$(OBJ_SUF).o compproc$(OBJ_SUF).o $(LFLAGS)
+periods: periods$(OBJ_SUF) parifact$(OBJ_SUF) compproc$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o periods periods$(OBJ_SUF) compproc$(OBJ_SUF) $(LFLAGS)
 
-comptest: comptest$(OBJ_SUF).o compproc$(OBJ_SUF).o arith$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/comptest comptest$(OBJ_SUF).o compproc$(OBJ_SUF).o arith$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+comptest: comptest$(OBJ_SUF) compproc$(OBJ_SUF) arith$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o comptest comptest$(OBJ_SUF) compproc$(OBJ_SUF) arith$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-rattest: rattest$(OBJ_SUF).o arith$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/rattest rattest$(OBJ_SUF).o  arith$(OBJ_SUF).o $(LFLAGS)
+rattest: rattest$(OBJ_SUF) arith$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o rattest rattest$(OBJ_SUF)  arith$(OBJ_SUF) $(LFLAGS)
 
-bigrattest: bigrattest$(OBJ_SUF).o marith$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/bigrattest bigrattest$(OBJ_SUF).o  marith$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o $(LFLAGS)
+bigrattest: bigrattest$(OBJ_SUF) marith$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o bigrattest bigrattest$(OBJ_SUF)  marith$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF) $(LFLAGS)
 
-ptest: ptest$(OBJ_SUF).o arith$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/ptest ptest$(OBJ_SUF).o arith$(OBJ_SUF).o $(LFLAGS) 
+ptest: ptest$(OBJ_SUF) arith$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o ptest ptest$(OBJ_SUF) arith$(OBJ_SUF) $(LFLAGS)
 
-mptest: mptest$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/mptest mptest$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o $(LFLAGS) 
+mptest: mptest$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o mptest mptest$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF) $(LFLAGS)
 
-test: test$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/test test$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)  parifact$(OBJ_SUF).o
+test: test$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o test test$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)  parifact$(OBJ_SUF)
 
-tbessel: tbessel$(OBJ_SUF).o kbessel$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/tbessel tbessel$(OBJ_SUF).o kbessel$(OBJ_SUF).o $(LFLAGS)
+tbessel: tbessel$(OBJ_SUF) kbessel$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o tbessel tbessel$(OBJ_SUF) kbessel$(OBJ_SUF) $(LFLAGS)
 
 
-read_rat: read_rat$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/read_rat read_rat$(OBJ_SUF).o $(LFLAGS)
+read_rat: read_rat$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o read_rat read_rat$(OBJ_SUF) $(LFLAGS)
 
-divisors: divisors$(OBJ_SUF).o  marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/divisors divisors$(OBJ_SUF).o  marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o $(LFLAGS)
-divisors$(OBJ_SUF).o: divisors.cc
+divisors: divisors$(OBJ_SUF)  marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o divisors divisors$(OBJ_SUF)  marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF) $(LFLAGS)
+divisors$(OBJ_SUF): divisors.cc
 
 fact1: fact1.cc
 	$(CXX) fact1.cc -o fact1 -O3 -DGCC_INLINE -lpari-2.2
-fact2: fact2$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o parifact$(OBJ_SUF).o
-	$(CXX) fact2$(OBJ_SUF).o  parifact$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o -o fact2 $(LFLAGS) -lpari-2.2
-fact2$(OBJ_SUF).o: fact2.cc marith.h interface.h
-	 $(CXX) $(CFLAGS) fact2.cc -o fact2$(OBJ_SUF).o -DGCC_INLINE 
+fact2: fact2$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) parifact$(OBJ_SUF)
+	$(CXX) fact2$(OBJ_SUF)  parifact$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) -o fact2 $(LFLAGS) -lpari-2.2
+fact2$(OBJ_SUF): fact2.cc marith.h interface.h
+	 $(CXX) $(CFLAGS) fact2.cc -o fact2$(OBJ_SUF) -DGCC_INLINE
 
-parifact$(OBJ_SUF).o: parifact.cc parifact.h
+parifact$(OBJ_SUF): parifact.cc parifact.h
 
-fact3: fact3$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/fact3 fact3$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS) 
+fact3: fact3$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o fact3 fact3$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
 
 CC.o: CC.cc RRextra.h
@@ -248,178 +273,206 @@
 	$(CC) -o RRt RRt.o RRextra.o -L$(NTLLIBDIR) -lLiDIA $(LFLAGS)
 
 
-gpslave$(OBJ_SUF).o: gpslave.cc interface.h templates.h marith.h arith.h xmod.h \
+gpslave$(OBJ_SUF): gpslave.cc interface.h templates.h marith.h arith.h xmod.h \
   gpslave.h
 
-fifo: fifo$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/fifo fifo$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS) 
+fifo: fifo$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o fifo fifo$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
 
-tconic: tconic$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o quadratic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o mmatrix$(OBJ_SUF).o mvector$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o illl$(OBJ_SUF).o unimod$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/tconic tconic$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o quadratic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o mmatrix$(OBJ_SUF).o mvector$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o illl$(OBJ_SUF).o unimod$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+tconic: tconic$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) quadratic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) mmatrix$(OBJ_SUF) mvector$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) illl$(OBJ_SUF) unimod$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o $(BINDIR)/tconic tconic$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) quadratic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) mmatrix$(OBJ_SUF) mvector$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) illl$(OBJ_SUF) unimod$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-tcon2: tcon2$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o quadratic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o mmatrix$(OBJ_SUF).o mvector$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o illl$(OBJ_SUF).o unimod$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/tcon2 tcon2$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o quadratic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o mmatrix$(OBJ_SUF).o mvector$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o illl$(OBJ_SUF).o unimod$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+tcon2: tcon2$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) quadratic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) mmatrix$(OBJ_SUF) mvector$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) illl$(OBJ_SUF) unimod$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o tcon2 tcon2$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) quadratic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) mmatrix$(OBJ_SUF) mvector$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) illl$(OBJ_SUF) unimod$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-tleg: tleg$(OBJ_SUF).o legendre$(OBJ_SUF).o conic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o vector$(OBJ_SUF).o matrix$(OBJ_SUF).o illl$(OBJ_SUF).o quadratic$(OBJ_SUF).o unimod$(OBJ_SUF).o interface$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/tleg tleg$(OBJ_SUF).o legendre$(OBJ_SUF).o conic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o  mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o vector$(OBJ_SUF).o matrix$(OBJ_SUF).o illl$(OBJ_SUF).o quadratic$(OBJ_SUF).o unimod$(OBJ_SUF).o interface$(OBJ_SUF).o $(LFLAGS)
+tleg: tleg$(OBJ_SUF) legendre$(OBJ_SUF) conic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) vector$(OBJ_SUF) matrix$(OBJ_SUF) illl$(OBJ_SUF) quadratic$(OBJ_SUF) unimod$(OBJ_SUF) interface$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o tleg tleg$(OBJ_SUF) legendre$(OBJ_SUF) conic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF)  mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) vector$(OBJ_SUF) matrix$(OBJ_SUF) illl$(OBJ_SUF) quadratic$(OBJ_SUF) unimod$(OBJ_SUF) interface$(OBJ_SUF) $(LFLAGS)
 
-thilbert: thilbert$(OBJ_SUF).o hilbert$(OBJ_SUF).o  quadratic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o interface$(OBJ_SUF).o\
-	compproc$(OBJ_SUF).o mvector$(OBJ_SUF).o vector$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o illl$(OBJ_SUF).o arith$(OBJ_SUF).o unimod$(OBJ_SUF).o
-	$(CXX) -o thilbert thilbert$(OBJ_SUF).o hilbert$(OBJ_SUF).o quadratic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o interface$(OBJ_SUF).o \
-	compproc$(OBJ_SUF).o mvector$(OBJ_SUF).o vector$(OBJ_SUF).o conic$(OBJ_SUF).o legendre$(OBJ_SUF).o illl$(OBJ_SUF).o arith$(OBJ_SUF).o unimod$(OBJ_SUF).o $(LFLAGS)
+thilbert: thilbert$(OBJ_SUF) hilbert$(OBJ_SUF)  quadratic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) interface$(OBJ_SUF)\
+	compproc$(OBJ_SUF) mvector$(OBJ_SUF) vector$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) illl$(OBJ_SUF) arith$(OBJ_SUF) unimod$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o thilbert thilbert$(OBJ_SUF) hilbert$(OBJ_SUF) quadratic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) interface$(OBJ_SUF) \
+	compproc$(OBJ_SUF) mvector$(OBJ_SUF) vector$(OBJ_SUF) conic$(OBJ_SUF) legendre$(OBJ_SUF) illl$(OBJ_SUF) arith$(OBJ_SUF) unimod$(OBJ_SUF) $(LFLAGS)
 
-auto: auto$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o
-	$(CXX) -o $(BINDIR)/auto auto$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o $(LFLAGS)
+auto: auto$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o auto auto$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) $(LFLAGS)
 
-auto$(OBJ_SUF).o: auto.cc matrix.h vector.h arith.h xmod.h
+auto$(OBJ_SUF): auto.cc matrix.h vector.h arith.h xmod.h
 
-test$(OBJ_SUF).o: test.cc
-tconic$(OBJ_SUF).o: tconic.cc conic.h legendre.h quadratic.h unimod.h marith.h arith.h xmod.h interface.h templates.h
-tcon2$(OBJ_SUF).o: tcon2.cc conic.h legendre.h quadratic.h unimod.h marith.h arith.h xmod.h interface.h templates.h
-conic$(OBJ_SUF).o: conic.cc marith.h interface.h templates.h arith.h xmod.h \
+test$(OBJ_SUF): test.cc
+tconic$(OBJ_SUF): tconic.cc conic.h legendre.h quadratic.h unimod.h marith.h arith.h xmod.h interface.h templates.h
+tcon2$(OBJ_SUF): tcon2.cc conic.h legendre.h quadratic.h unimod.h marith.h arith.h xmod.h interface.h templates.h
+conic$(OBJ_SUF): conic.cc marith.h interface.h templates.h arith.h xmod.h \
   quadratic.h conic.h legendre.h
-hilbert$(OBJ_SUF).o: hilbert.cc marith.h interface.h templates.h arith.h xmod.h \
+hilbert$(OBJ_SUF): hilbert.cc marith.h interface.h templates.h arith.h xmod.h \
   quadratic.h hilbert.h
-thilbert$(OBJ_SUF).o: hilbert.h thilbert.cc
+thilbert$(OBJ_SUF): hilbert.h thilbert.cc
 
-tleg$(OBJ_SUF).o: tleg.cc legendre.h conic.h quadratic.h unimod.h mmatrix.h
-legendre$(OBJ_SUF).o: legendre.cc mmatrix.h matrix.h mat.h vec.h interface.h \
+tleg$(OBJ_SUF): tleg.cc legendre.h conic.h quadratic.h unimod.h mmatrix.h
+legendre$(OBJ_SUF): legendre.cc mmatrix.h matrix.h mat.h vec.h interface.h \
   templates.h arith.h xmod.h mvector.h marith.h unimod.h quadratic.h \
   conic.h legendre.h illl.h
-tbessel$(OBJ_SUF).o: tbessel.cc kbessel.h
-kbessel$(OBJ_SUF).o: kbessel.cc kbessel.h
-nagtest$(OBJ_SUF).o: nagtest.cc
-rattest$(OBJ_SUF).o: rattest.cc rat.h
-bigrattest$(OBJ_SUF).o: bigrattest.cc bigrat.h rat.h
+tbessel$(OBJ_SUF): tbessel.cc kbessel.h
+kbessel$(OBJ_SUF): kbessel.cc kbessel.h
+nagtest$(OBJ_SUF): nagtest.cc
+rattest$(OBJ_SUF): rattest.cc rat.h
+bigrattest$(OBJ_SUF): bigrattest.cc bigrat.h rat.h
 
-interface$(OBJ_SUF).o: interface.cc interface.h templates.h
-unimod$(OBJ_SUF).o: unimod.cc interface.h templates.h marith.h arith.h xmod.h \
+interface$(OBJ_SUF): interface.cc interface.h templates.h
+unimod$(OBJ_SUF): unimod.cc interface.h templates.h marith.h arith.h xmod.h \
   unimod.h
-arith$(OBJ_SUF).o: arith.cc arith.h interface.h templates.h xmod.h
-marith$(OBJ_SUF).o: marith.cc interface.h templates.h marith.h arith.h xmod.h \
+arith$(OBJ_SUF): arith.cc arith.h interface.h templates.h xmod.h
+marith$(OBJ_SUF): marith.cc interface.h templates.h marith.h arith.h xmod.h \
   gpslave.h
-polys$(OBJ_SUF).o: polys.cc polys.h gf.h
-gf$(OBJ_SUF).o: gf.cc gf.h
-realroots$(OBJ_SUF).o: realroots.h realroots.cc
-
-ptest$(OBJ_SUF).o: ptest.cc arith.h xmod.h interface.h templates.h
-space$(OBJ_SUF).o: space.cc subspace.h matrix.h vector.h arith.h xmod.h
-comptest$(OBJ_SUF).o: interface.h templates.h comptest.cc compproc.h marith.h arith.h xmod.h
-compproc$(OBJ_SUF).o: compproc.cc compproc.h interface.h templates.h
-linear$(OBJ_SUF).o: linear.cc linear.h
-linsyst$(OBJ_SUF).o: linsyst.cc linsyst.h linear.h
-lintest$(OBJ_SUF).o: lintest.cc linsyst.h linear.h
-mptest$(OBJ_SUF).o: interface.h templates.h marith.h mptest.cc arith.h xmod.h
-test$(OBJ_SUF).o: interface.h templates.h marith.h test.cc arith.h xmod.h
-mvectest$(OBJ_SUF).o: interface.h templates.h mvectest.cc mvector.h marith.h arith.h xmod.h
-mvector$(OBJ_SUF).o: mvector.cc mvector.h vector.h vec.h interface.h templates.h \
+polys$(OBJ_SUF): polys.cc polys.h gf.h
+gf$(OBJ_SUF): gf.cc gf.h
+realroots$(OBJ_SUF): realroots.h realroots.cc
+
+ptest$(OBJ_SUF): ptest.cc arith.h xmod.h interface.h templates.h
+space$(OBJ_SUF): space.cc subspace.h matrix.h vector.h arith.h xmod.h
+comptest$(OBJ_SUF): interface.h templates.h comptest.cc compproc.h marith.h arith.h xmod.h
+compproc$(OBJ_SUF): compproc.cc compproc.h interface.h templates.h
+linear$(OBJ_SUF): linear.cc linear.h
+linsyst$(OBJ_SUF): linsyst.cc linsyst.h linear.h
+lintest$(OBJ_SUF): lintest.cc linsyst.h linear.h
+mptest$(OBJ_SUF): interface.h templates.h marith.h mptest.cc arith.h xmod.h
+test$(OBJ_SUF): interface.h templates.h marith.h test.cc arith.h xmod.h
+mvectest$(OBJ_SUF): interface.h templates.h mvectest.cc mvector.h marith.h arith.h xmod.h
+mvector$(OBJ_SUF): mvector.cc mvector.h vector.h vec.h interface.h templates.h \
   arith.h xmod.h marith.h
-mmatrix$(OBJ_SUF).o: mmatrix.cc mmatrix.h matrix.h mat.h vec.h interface.h \
+mmatrix$(OBJ_SUF): mmatrix.cc mmatrix.h matrix.h mat.h vec.h interface.h \
   templates.h arith.h xmod.h mvector.h marith.h
-mmattest$(OBJ_SUF).o: interface.h templates.h mmattest.cc mmatrix.h mvector.h vector.h marith.h
-msubspace$(OBJ_SUF).o: msubspace.cc msubspace.h mmatrix.h matrix.h mat.h vec.h \
+mmattest$(OBJ_SUF): interface.h templates.h mmattest.cc mmatrix.h mvector.h vector.h marith.h
+msubspace$(OBJ_SUF): msubspace.cc msubspace.h mmatrix.h matrix.h mat.h vec.h \
   interface.h templates.h arith.h xmod.h mvector.h marith.h
-mspace$(OBJ_SUF).o: interface.h templates.h mspace.cc msubspace.h mmatrix.h mvector.h marith.h
+mspace$(OBJ_SUF): interface.h templates.h mspace.cc msubspace.h mmatrix.h mvector.h marith.h
 
 ### svec is not used now
-svec$(OBJ_SUF).o: svec.cc vector.cc  svec.h vector.h arith.h xmod.h
-svectest$(OBJ_SUF).o: svectest.cc svec.h svec.cc vector.h vector.cc arith.h xmod.h
+svec$(OBJ_SUF): svec.cc vector.cc  svec.h vector.h arith.h xmod.h
+svectest$(OBJ_SUF): svectest.cc svec.h svec.cc vector.h vector.cc arith.h xmod.h
 ### svec is not used now
 
-smatrix$(OBJ_SUF).o: smat.cc smat.h smatrix.cc smatrix.h vector.h vec.h matrix.h mat.h sub.h subspace.h arith.h xmod.h interface.h templates.h
+smatrix$(OBJ_SUF): smat.cc smat.h smatrix.cc smatrix.h vector.h vec.h matrix.h mat.h sub.h subspace.h arith.h xmod.h interface.h templates.h
 
-smatrix2$(OBJ_SUF).o: smat2.cc smat2.h smatrix.cc smatrix.h smat.h svector.h svec.h vector.h vec.h matrix.h mat.h sub.h subspace.h arith.h xmod.h interface.h templates.h
+smatrix2$(OBJ_SUF): smat2.cc smat2.h smatrix.cc smatrix.h smat.h svector.h svec.h vector.h vec.h matrix.h mat.h sub.h subspace.h arith.h xmod.h interface.h templates.h
 
 svector(OBJ_SUF).o: svec.cc svec.h svector.cc svector.h vector.h vec.h matrix.h mat.h sub.h subspace.h arith.h xmod.h interface.h templates.h
 
-smatrix_elim$(OBJ_SUF).o: smatrix_elim.cc smatrix_elim.h smat_elim.h smat.h sub.h \
+smatrix_elim$(OBJ_SUF): smatrix_elim.cc smatrix_elim.h smat_elim.h smat.h sub.h \
   mat.h vec.h interface.h templates.h arith.h xmod.h smat_elim.cc
 
-smatrix2_elim$(OBJ_SUF).o: smatrix2_elim.cc smatrix2_elim.h \
+smatrix2_elim$(OBJ_SUF): smatrix2_elim.cc smatrix2_elim.h \
   smat2_elim.cc smat2_elim.h smatrix2.h smat2.h svector.h svec.h sub.h subspace.h \
   mat.h vec.h interface.h templates.h arith.h xmod.h smat_elim.cc
 
-smattest$(OBJ_SUF).o: smattest.cc random.cc smat.h smatrix.h smat_elim.h smatrix_elim.h sub.h subspace.h mat.h matrix.h vec.h vector.h arith.h xmod.h subspace.h interface.h templates.h
+smattest$(OBJ_SUF): smattest.cc random.cc smat.h smatrix.h smat_elim.h smatrix_elim.h sub.h subspace.h mat.h matrix.h vec.h vector.h arith.h xmod.h subspace.h interface.h templates.h
 
-smat2test$(OBJ_SUF).o: smat2test.cc random.cc smat2.h smatrix2.h smat2_elim.h smatrix2_elim.h svec.h svector.h sub.h subspace.h mat.h matrix.h vec.h vector.h arith.h xmod.h subspace.h interface.h templates.h
+smat2test$(OBJ_SUF): smat2test.cc random.cc smat2.h smatrix2.h smat2_elim.h smatrix2_elim.h svec.h svector.h sub.h subspace.h mat.h matrix.h vec.h vector.h arith.h xmod.h subspace.h interface.h templates.h
 
 xsplit: $(XSPLIT_OBJS)
 
-xsplit0$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit0$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
   smatrix_elim.h smat_elim.h smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=0 xsplit.cc -o xsplit0$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=0 xsplit.cc -o xsplit0$(OBJ_SUF)
 
-xsplit1$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit1$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
   smatrix_elim.h smat_elim.h smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=1 xsplit.cc -o xsplit1$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=1 xsplit.cc -o xsplit1$(OBJ_SUF)
 
-xsplit2$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit2$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
   smatrix_elim.h smat_elim.h smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=2 xsplit.cc -o xsplit2$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=2 xsplit.cc -o xsplit2$(OBJ_SUF)
 
-xsplit3$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit3$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h marith.h \
   mvector.h mmatrix.h msubspace.h splitbase.h smatrix_elim.h smat_elim.h \
   smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=3 xsplit.cc -o xsplit3$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=3 xsplit.cc -o xsplit3$(OBJ_SUF)
 
-xsplit4$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit4$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h marith.h \
   mvector.h mmatrix.h msubspace.h splitbase.h smatrix_elim.h smat_elim.h \
   smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=4 xsplit.cc -o xsplit4$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=4 xsplit.cc -o xsplit4$(OBJ_SUF)
 
-xsplit5$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit5$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
   smatrix_elim.h smat_elim.h smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=5 xsplit.cc -o xsplit5$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=5 xsplit.cc -o xsplit5$(OBJ_SUF)
 
-xsplit6$(OBJ_SUF).o: xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+xsplit6$(OBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
   smatrix_elim.h smat_elim.h smat.h
-	$(CXX) $(CFLAGS) -DMETHOD=6 xsplit.cc -o xsplit6$(OBJ_SUF).o
+	$(CXX) $(CFLAGS) -DMETHOD=6 xsplit.cc -o xsplit6$(OBJ_SUF)
+
+xsplit1$(SOBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
+   smatrix_elim.h smat_elim.h smat.h
+	$(CXX) $(PICFLAG) $(CFLAGS) -DMETHOD=1 xsplit.cc -o xsplit1$(SOBJ_SUF)
+
+xsplit2$(SOBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
+   smatrix_elim.h smat_elim.h smat.h
+	$(CXX) $(PICFLAG) $(CFLAGS) -DMETHOD=2 xsplit.cc -o xsplit2$(SOBJ_SUF)
+
+xsplit3$(SOBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h marith.h \
+   mvector.h mmatrix.h msubspace.h splitbase.h smatrix_elim.h smat_elim.h \
+   smat.h
+	$(CXX) $(PICFLAG) $(CFLAGS) -DMETHOD=3 xsplit.cc -o xsplit3$(SOBJ_SUF)
+
+xsplit4$(SOBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h marith.h \
+   mvector.h mmatrix.h msubspace.h splitbase.h smatrix_elim.h smat_elim.h \
+   smat.h
+	$(CXX) $(PICFLAG) $(CFLAGS) -DMETHOD=4 xsplit.cc -o xsplit4$(SOBJ_SUF)
+
+xsplit5$(SOBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
+   smatrix_elim.h smat_elim.h smat.h
+	$(CXX) $(PICFLAG) $(CFLAGS) -DMETHOD=5 xsplit.cc -o xsplit5$(SOBJ_SUF)
+
+xsplit6$(SOBJ_SUF): xsplit.cc xsplit.h method.h arith.h interface.h templates.h \
+   xmod.h vector.h vec.h matrix.h mat.h subspace.h sub.h splitbase.h \
+   smatrix_elim.h smat_elim.h smat.h
+	$(CXX) $(PICFLAG) $(CFLAGS) -DMETHOD=6 xsplit.cc -o xsplit6$(SOBJ_SUF)
 
 linalg: $(LINALG_OBJS)
-vector$(OBJ_SUF).o: vector.cc vec.h interface.h templates.h arith.h xmod.h vec.cc
-svector$(OBJ_SUF).o: svector.cc svector.h svec.cc svec.h interface.h templates.h arith.h xmod.h vec.cc vec.h
-matrix$(OBJ_SUF).o: matrix.cc mat.h vec.h interface.h templates.h arith.h xmod.h \
+vector$(OBJ_SUF): vector.cc vec.h interface.h templates.h arith.h xmod.h vec.cc
+svector$(OBJ_SUF): svector.cc svector.h svec.cc svec.h interface.h templates.h arith.h xmod.h vec.cc vec.h
+matrix$(OBJ_SUF): matrix.cc mat.h vec.h interface.h templates.h arith.h xmod.h \
   mat.cc
-subspace$(OBJ_SUF).o: subspace.cc sub.h mat.h vec.h interface.h templates.h arith.h \
+subspace$(OBJ_SUF): subspace.cc sub.h mat.h vec.h interface.h templates.h arith.h \
   xmod.h sub.cc
 
 
-#template for compiling *.cc -> *$(OBJ_SUF).o :
-
-%$(OBJ_SUF).o:   %.cc
-	$(CXX) $(CFLAGS) $< -o $@
 
-p2points$(OBJ_SUF).o: p2points.cc p2points.h bigrat.h marith.h interface.h arith.h
-tp2points$(OBJ_SUF).o: tp2points.cc p2points.h bigrat.h marith.h interface.h arith.h
-tp2points: tp2points$(OBJ_SUF).o p2points$(OBJ_SUF).o marith$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o 
-	$(CXX) -o tp2points tp2points$(OBJ_SUF).o p2points$(OBJ_SUF).o marith$(OBJ_SUF).o arith$(OBJ_SUF).o interface$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o $(LFLAGS)
+p2points$(OBJ_SUF): p2points.cc p2points.h bigrat.h marith.h interface.h arith.h
+tp2points$(OBJ_SUF): tp2points.cc p2points.h bigrat.h marith.h interface.h arith.h
+tp2points: tp2points$(OBJ_SUF) p2points$(OBJ_SUF) marith$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o tp2points tp2points$(OBJ_SUF) p2points$(OBJ_SUF) marith$(OBJ_SUF) arith$(OBJ_SUF) interface$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) $(LFLAGS)
 
-rcubic: rcubic$(OBJ_SUF).o cubic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o realroots$(OBJ_SUF).o
-	$(CXX) -o rcubic rcubic$(OBJ_SUF).o cubic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o realroots$(OBJ_SUF).o $(LFLAGS)
+rcubic: rcubic$(OBJ_SUF) cubic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) realroots$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o rcubic rcubic$(OBJ_SUF) cubic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) realroots$(OBJ_SUF) $(LFLAGS)
 
-lcubic: lcubic$(OBJ_SUF).o cubic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o realroots$(OBJ_SUF).o
-	$(CXX) -o lcubic lcubic$(OBJ_SUF).o cubic$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o parifact$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o interface$(OBJ_SUF).o realroots$(OBJ_SUF).o $(LFLAGS)
+lcubic: lcubic$(OBJ_SUF) cubic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) realroots$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o lcubic lcubic$(OBJ_SUF) cubic$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) parifact$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) interface$(OBJ_SUF) realroots$(OBJ_SUF) $(LFLAGS)
 
-quadratic$(OBJ_SUF).o: quadratic.cc marith.h interface.h templates.h arith.h xmod.h \
+quadratic$(OBJ_SUF): quadratic.cc marith.h interface.h templates.h arith.h xmod.h \
   unimod.h quadratic.h
-cubic$(OBJ_SUF).o: cubic.cc marith.h interface.h templates.h arith.h xmod.h \
+cubic$(OBJ_SUF): cubic.cc marith.h interface.h templates.h arith.h xmod.h \
   unimod.h cubic.h
-rcubic$(OBJ_SUF).o: cubic.h rcubic.cc
-lcubic$(OBJ_SUF).o: cubic.h lcubic.cc
+rcubic$(OBJ_SUF): cubic.h rcubic.cc
+lcubic$(OBJ_SUF): cubic.h lcubic.cc
 
-testlat$(OBJ_SUF).o: testlat.cc
-testlat: testlat$(OBJ_SUF).o
-	 $(CXX) -o testlat testlat$(OBJ_SUF).o $(LFLAGS)
+testlat$(OBJ_SUF): testlat.cc
+testlat: testlat$(OBJ_SUF)
+	 $(CXX) $(LDFLAGS) -o testlat testlat$(OBJ_SUF) $(LFLAGS)
 
-illl$(OBJ_SUF).o: illl.cc mvector.h vector.h vec.h interface.h templates.h arith.h \
+illl$(OBJ_SUF): illl.cc mvector.h vector.h vec.h interface.h templates.h arith.h \
   xmod.h marith.h illl.h
 #ifdef NTL_INTS
 #	$(CXX) -c -g $(NTLCFLAGS) illl.cc
@@ -427,18 +480,18 @@
 # since with -O gcc-2.95 gives an internal compiler error!
 # -- doesn't any more
 
-tilll$(OBJ_SUF).o: illl.h tilll.cc mmatrix.h mvector.h marith.h
-tilll: tilll$(OBJ_SUF).o illl$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o \
-                               arith$(OBJ_SUF).o compproc$(OBJ_SUF).o 
-	$(CXX) -o tilll tilll$(OBJ_SUF).o illl$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o \
-                       matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o $(LFLAGS)
-leg_lll$(OBJ_SUF).o: illl.h tilll.cc mmatrix.h mvector.h marith.h legendre.h conic.h
-leg_lll: leg_lll$(OBJ_SUF).o illl$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o matrix$(OBJ_SUF).o vector$(OBJ_SUF).o \
-                                   arith$(OBJ_SUF).o compproc$(OBJ_SUF).o legendre$(OBJ_SUF).o conic$(OBJ_SUF).o
-	$(CXX) -o leg_lll leg_lll$(OBJ_SUF).o illl$(OBJ_SUF).o marith$(OBJ_SUF).o gpslave$(OBJ_SUF).o mvector$(OBJ_SUF).o mmatrix$(OBJ_SUF).o \
-           matrix$(OBJ_SUF).o vector$(OBJ_SUF).o arith$(OBJ_SUF).o compproc$(OBJ_SUF).o legendre$(OBJ_SUF).o conic$(OBJ_SUF).o $(LFLAGS)
+tilll$(OBJ_SUF): illl.h tilll.cc mmatrix.h mvector.h marith.h
+tilll: tilll$(OBJ_SUF) illl$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) \
+                               arith$(OBJ_SUF) compproc$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o tilll tilll$(OBJ_SUF) illl$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) \
+                       matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) $(LFLAGS)
+leg_lll$(OBJ_SUF): illl.h tilll.cc mmatrix.h mvector.h marith.h legendre.h conic.h
+leg_lll: leg_lll$(OBJ_SUF) illl$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) matrix$(OBJ_SUF) vector$(OBJ_SUF) \
+                                   arith$(OBJ_SUF) compproc$(OBJ_SUF) legendre$(OBJ_SUF) conic$(OBJ_SUF)
+	$(CXX) $(LDFLAGS) -o leg_lll leg_lll$(OBJ_SUF) illl$(OBJ_SUF) marith$(OBJ_SUF) gpslave$(OBJ_SUF) mvector$(OBJ_SUF) mmatrix$(OBJ_SUF) \
+           matrix$(OBJ_SUF) vector$(OBJ_SUF) arith$(OBJ_SUF) compproc$(OBJ_SUF) legendre$(OBJ_SUF) conic$(OBJ_SUF) $(LFLAGS)
 
-timer$(OBJ_SUF).o: timer.cc interface.h templates.h timer.h
+timer$(OBJ_SUF): timer.cc interface.h templates.h timer.h
 
 new.o: new.C new.H
 	$(CXX) -g $(CFLAGS) -DHAVE_ATEXIT new.C
