diff --git a/configure.ac b/configure.ac
index 4b3d8d3..f6e6b20 100644
--- a/configure.ac
+++ b/configure.ac
@@ -20,6 +20,9 @@ AC_CHECK_SIZEOF(int)
 AC_CHECK_SIZEOF(long)
 
 AC_CHECK_HEADER([unordered_map],[AC_DEFINE([PBORI_HAVE_UNORDERED_MAP],[],[has unordered map])])
+if ! test "x$ac_cv_header_unordered_map" = xyes; then
+              AC_CHECK_HEADER([tr1/unordered_map],[AC_DEFINE([PBORI_HAVE_TR1_UNORDERED_MAP],[],[has tr1 unordered map])])
+fi
 
 PKG_CHECK_MODULES([M4RI], m4ri, [AC_DEFINE([PBORI_HAVE_M4RI],[],[has m4ri])])
 AC_EGREP_CPP([pbori_have_m4ri_png],
diff --git a/libbrial/include/polybori/routines/pbori_func.h b/libbrial/include/polybori/routines/pbori_func.h
index a812b77..5dfa424 100644
--- a/libbrial/include/polybori/routines/pbori_func.h
+++ b/libbrial/include/polybori/routines/pbori_func.h
@@ -29,7 +29,11 @@
 #ifdef PBORI_HAVE_UNORDERED_MAP
 #include <unordered_map>
 #else
-#include <map>
+#  ifdef PBORI_HAVE_TR1_UNORDERED_MAP
+#    include <tr1/unordered_map>
+#  else
+#    include <map>
+#  endif
 #endif
 
 BEGIN_NAMESPACE_PBORI
@@ -625,7 +629,11 @@ public:
 #ifdef PBORI_HAVE_UNORDERED_MAP
    typedef std::unordered_map<Type, idx_type, hashes<Type> > type;
 #else
-   typedef std::map<Type, idx_type, Comparator> type;
+#  ifdef PBORI_HAVE_TR1_UNORDERED_MAP
+     typedef std::tr1::unordered_map<Type, idx_type, hashes<Type> > type;
+#  else
+     typedef std::map<Type, idx_type, Comparator> type;
+#  endif
 #endif
 };
 
