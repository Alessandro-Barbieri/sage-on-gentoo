--- module_list.py.orig	2014-07-23 10:31:07.942271221 +1200
+++ module_list.py	2014-07-23 10:38:31.742559496 +1200
@@ -47,7 +47,8 @@
 ### Givaro flags
 #########################################################
 
-givaro_extra_compile_args =['-D__STDC_LIMIT_MACROS']
+givaro_extra_compile_args =['-D__STDC_LIMIT_MACROS', '-DNDEBUG']
+singular_extra_compile_args = ['-DNDEBUG']
 
 #########################################################
 ### PolyBoRi settings
@@ -91,21 +92,24 @@
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.algebras.letterplace.free_algebra_element_letterplace',
               sources = ['sage/algebras/letterplace/free_algebra_element_letterplace.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.algebras.letterplace.letterplace_ideal',
               sources = ['sage/algebras/letterplace/letterplace_ideal.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.algebras.quatalg.quaternion_algebra_cython',
                sources = ['sage/algebras/quatalg/quaternion_algebra_cython.pyx'],
@@ -759,28 +763,31 @@
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
               depends = singular_depends + givaro_depends,
-              extra_compile_args = givaro_extra_compile_args),
+              extra_compile_args = givaro_extra_compile_args + singular_extra_compile_args),
 
     Extension('sage.libs.singular.polynomial',
               sources = ['sage/libs/singular/polynomial.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.libs.singular.ring',
               sources = ['sage/libs/singular/ring.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.libs.singular.groebner_strategy',
               sources = ['sage/libs/singular/groebner_strategy.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.libs.singular.function',
               sources = ['sage/libs/singular/function.pyx'],
@@ -788,14 +795,15 @@
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
               depends = singular_depends,
-              extra_compile_args = givaro_extra_compile_args),
+              extra_compile_args = givaro_extra_compile_args + singular_extra_compile_args),
 
     Extension('sage.libs.singular.option',
               sources = ['sage/libs/singular/option.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.libs.symmetrica.symmetrica',
               sources = ["sage/libs/symmetrica/%s"%s for s in ["symmetrica.pyx"]],
@@ -1095,7 +1103,8 @@
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.matrix.matrix_rational_dense',
               sources = ['sage/matrix/matrix_rational_dense.pyx'],
@@ -1789,7 +1798,8 @@
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.rings.polynomial.plural',
               sources = ['sage/rings/polynomial/plural.pyx'],
@@ -1797,14 +1807,15 @@
               language="c++",
               include_dirs = [SAGE_INC +'/singular'],
               depends = [SAGE_INC + "/libsingular.h"],
-              extra_compile_args = givaro_extra_compile_args),
+              extra_compile_args = givaro_extra_compile_args + singular_extra_compile_args),
 
     Extension('sage.rings.polynomial.multi_polynomial_libsingular',
               sources = ['sage/rings/polynomial/multi_polynomial_libsingular.pyx'],
               libraries = singular_libs,
               language="c++",
               include_dirs = [SAGE_INC + '/singular', SAGE_INC + '/factory'],
-              depends = singular_depends),
+              depends = singular_depends,
+              extra_compile_args = singular_extra_compile_args),
 
     Extension('sage.rings.polynomial.multi_polynomial_ring_generic',
               sources = ['sage/rings/polynomial/multi_polynomial_ring_generic.pyx']),
