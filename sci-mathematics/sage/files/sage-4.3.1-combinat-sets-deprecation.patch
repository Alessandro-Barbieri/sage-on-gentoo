--- sage/combinat/matrices/latin.py.orig	2009-12-31 09:11:57.380553386 +0000
+++ sage/combinat/matrices/latin.py	2009-12-31 09:15:26.152549230 +0000
@@ -130,8 +130,6 @@
 #                  http://www.gnu.org/licenses/
 #*****************************************************************************
 
-import sets
-
 from sage.matrix.all import matrix
 from sage.rings.all import ZZ
 from sage.rings.all import Integer
@@ -2402,8 +2400,8 @@
     for r in range(len(c1)):
         for c in range(len(c2)):
             for s in range(len(c3)):
-                nr_common = len(reduce(sets.Set.intersection, \
-                    [sets.Set(c1[r]), sets.Set(c2[c]), sets.Set(c3[s])]))
+                nr_common = len(reduce(set.intersection, \
+                    [set(c1[r]), set(c2[c]), set(c3[s])]))
                 assert nr_common in [0, 1]
 
                 if nr_common == 1: T1[r, c] = s
@@ -2535,14 +2533,14 @@
     """
 
     for r in range(T1.nrows()):
-        val1 = sets.Set(filter(lambda x: x >= 0, T1.row(r)))
-        val2 = sets.Set(filter(lambda x: x >= 0, T2.row(r)))
+        val1 = set(filter(lambda x: x >= 0, T1.row(r)))
+        val2 = set(filter(lambda x: x >= 0, T2.row(r)))
 
         if val1 != val2: return False
 
     for c in range(T1.ncols()):
-        val1 = sets.Set(filter(lambda x: x >= 0, T1.column(c)))
-        val2 = sets.Set(filter(lambda x: x >= 0, T2.column(c)))
+        val1 = set(filter(lambda x: x >= 0, T1.column(c)))
+        val2 = set(filter(lambda x: x >= 0, T2.column(c)))
 
         if val1 != val2: return False
 
