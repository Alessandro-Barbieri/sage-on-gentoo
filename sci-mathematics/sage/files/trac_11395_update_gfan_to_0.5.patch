# HG changeset patch
# User Marshall Hampton <hamptonio@gmail.com>
# Date 1341689603 18000
# Node ID 55b844113538f5aa22fc43551bc258fc5e5846aa
# Parent  7a2a36b9da0fc4bfc82fbd11ca7d48f741f74bf7
trac_11395, update gfan to version 0.5

diff --git a/sage/rings/polynomial/groebner_fan.py b/sage/rings/polynomial/groebner_fan.py
--- a/sage/rings/polynomial/groebner_fan.py
+++ b/sage/rings/polynomial/groebner_fan.py
@@ -349,7 +349,7 @@
             sage: gf = R3.ideal([x^8-y^4,y^4-z^2,z^2-2]).groebner_fan()
             sage: pf = gf.polyhedralfan()
             sage: pf._str_()
-            '_application PolyhedralFan\n_version 2.2\n_type PolyhedralFan\n\nAMBIENT_DIM\n3\n\nDIM\n3\n\nLINEALITY_DIM\n0\n\nRAYS\n0 0 1\t# 0\n0 1 0\t# 1\n1 0 0\t# 2\n\nN_RAYS\n3\n\nLINEALITY_SPACE\n\nORTH_LINEALITY_SPACE\n1 0 0\n0 1 0\n0 0 1\n\nF_VECTOR\n1 3 3 1\n\nMY_EULER\n0\n\nSIMPLICIAL\n1\n\nPURE\n1\n\nCONES\n{}\t# Dimension 0\n{0}\t# Dimension 1\n{1}\n{2}\n{0 1}\t# Dimension 2\n{0 2}\n{1 2}\n{0 1 2}\t# Dimension 3\n\nMAXIMAL_CONES\n{0 1 2}\t# Dimension 3\n'
+            '_application fan\n_version 2.2\n_type SymmetricFan\n\nAMBIENT_DIM\n3\n\nDIM\n3\n\nLINEALITY_DIM\n0\n\nRAYS\n0 0 1\t# 0\n0 1 0\t# 1\n1 0 0\t# 2\n\nN_RAYS\n3\n\nLINEALITY_SPACE\n\nORTH_LINEALITY_SPACE\n1 0 0\n0 1 0\n0 0 1\n\nF_VECTOR\n1 3 3 1\n\nSIMPLICIAL\n1\n\nPURE\n1\n\nCONES\n{}\t# Dimension 0\n{0}\t# Dimension 1\n{1}\n{2}\n{0 1}\t# Dimension 2\n{0 2}\n{1 2}\n{0 1 2}\t# Dimension 3\n\nMAXIMAL_CONES\n{0 1 2}\t# Dimension 3\n'
         """
         return self._str
 
@@ -601,7 +601,7 @@
             sage: r3.<x,y,z> = PolynomialRing(QQ,3)
             sage: g = r3.ideal([x^3+y,y^3-z,z^2-x]).groebner_fan()
             sage: g.weight_vectors()
-            [(3, 7, 1), (5, 1, 2), (7, 1, 4), (1, 1, 4), (1, 1, 1), (1, 4, 1), (1, 4, 10)]
+            [(3, 7, 1), (5, 1, 2), (7, 1, 4), (5, 1, 4), (1, 1, 1), (1, 4, 8), (1, 4, 10)]
             sage: r4.<x,y,z,w> = PolynomialRing(QQ,4)
             sage: g4 = r4.ideal([x^3+y,y^3-z,z^2-x,z^3 - w]).groebner_fan()
             sage: len(g4.weight_vectors())
@@ -641,7 +641,7 @@
         try:
             return self.__gfan_reduced_groebner_bases
         except AttributeError:
-            B = self.gfan()
+            B = self.gfan(cmd='bases')
             B = B.replace('\n','')
             self.__gfan_reduced_groebner_bases = B
             return B
@@ -718,11 +718,11 @@
             return self.__gfan_mod
         except AttributeError:
             mod = ''
-            p = self.characteristic()
-            if p != 0:
-                mod += ' --mod %s'%p
-            else:
-                mod += ''
+            #p = self.characteristic()
+            #if p != 0:
+            #    mod += ' --mod %s'%p
+            #else:
+            #    mod += ''
 
             if self.__is_groebner_basis:
                 mod += ' -g'
@@ -733,7 +733,7 @@
             self.__gfan_mod = mod
             return self.__gfan_mod
 
-    def gfan(self, cmd='', I=None, format=True):
+    def gfan(self, cmd='bases', I=None, format=True):
         r"""
         Returns the gfan output as a string given an input cmd; the default
         is to produce the list of reduced Groebner bases in gfan format.
@@ -1128,11 +1128,7 @@
             sage: R.<x,y> = PolynomialRing(QQ)
             sage: G = R.ideal([y^3 - x^2, y^2 - 13*x]).groebner_fan()
             sage: G._gfan_stats()
-            {'Number of reduced Groebner bases': 3,
-             'Maximal total degree of a Groebner basis': 4,
-             'Dimension of homogeneity space': 0,
-             'Number of variables': 2,
-             'Minimal total degree of a Groebner basis': 2}
+            {'Number of reduced Groebner bases': 3, 'Number of variables': 2, 'Maximal number of terms in Groebner basis': 6, 'Minimal total degree of a Groebner basis': 2, 'Maximal total degree of a Groebner basis': 4, 'Maximal number of polynomials in Groebner basis': 3, 'Dimension of homogeneity space': 0}
         """
         try:
             return self.__stats
