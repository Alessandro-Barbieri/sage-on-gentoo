# HG changeset patch
# User Nicolas M. Thiery <nthiery@users.sf.net>
# Date 1303428091 -7200
# Node ID 6e06e22cfa42456f811b9b27a7260b31f3833f1b
# Parent  d6e5d02fc9a81c54300fdf27b2349bd53e755b2b
#11236: Fix _test_eq for Python 2.7

diff --git a/sage/structure/parent.pyx b/sage/structure/parent.pyx
--- a/sage/structure/parent.pyx
+++ b/sage/structure/parent.pyx
@@ -634,7 +634,7 @@ cdef class Parent(category_object.Catego
             sage: CCls()._test_eq()
             Traceback (most recent call last):
             ...
-            AssertionError: <class '__main__.CCls'> == None
+            AssertionError: broken equality: <class '__main__.CCls'> == None
 
         Let us now break inequality::
 
@@ -647,12 +647,18 @@ cdef class Parent(category_object.Catego
             AssertionError: broken non-equality: <class '__main__.CCls'> != itself
         """
         tester = self._tester(**options)
-        tester.assertEqual(self, self)
-        tester.assertNotEqual(self, None)
+
+        # We don't use assertEqual / assertNonEqual in order to be
+        # 100% sure we indeed call the operators == and !=, whatever
+        # the version of Python is (see #11236)
+        tester.assertTrue(self == self,
+                   LazyFormat("broken equality: %s == itself is False")%self)
+        tester.assertFalse(self == None,
+                   LazyFormat("broken equality: %s == None")%self)
         tester.assertFalse(self != self,
                    LazyFormat("broken non-equality: %s != itself")%self)
         tester.assertTrue(self != None,
-                   LazyFormat("broken non-equality: %s is not != None")%self)
+                   LazyFormat("broken non-equality: %s != None is False")%self)
 
     cdef int init_coerce(self, bint warn=True) except -1:
         if self._coerce_from_hash is None:
