# HG changeset patch
# User Francois Bissey <francois.bissey@canterbury.ac.nz>
# Date 1297380460 -46800
# Node ID f00392fe6abc82913da8fb4e07b36a56dd67a060
# Parent  b995f0056e8f09421b141a642b0ef312807befd1
trac_10766: Fix doctests broken by updating to ecl-11.1.1

diff -r b995f0056e8f -r f00392fe6abc sage/calculus/calculus.py
--- sage/calculus/calculus.py	Mon Feb 07 12:25:34 2011 +0000
+++ sage/calculus/calculus.py	Fri Feb 11 12:27:40 2011 +1300
@@ -675,7 +675,7 @@
     Now numerically integrating, we see why the answer is wrong::
 
         sage: f.nintegrate(x,0,1)
-        (-480.00000000000011, 5.3290705182007538e-12, 21, 0)
+        (-480.00000000000006, 5.3290705182007538e-12, 21, 0)
 
     It is just because every floating point evaluation of return -480.0
     in floating point.
diff -r b995f0056e8f -r f00392fe6abc sage/interfaces/lisp.py
--- sage/interfaces/lisp.py	Mon Feb 07 12:25:34 2011 +0000
+++ sage/interfaces/lisp.py	Fri Feb 11 12:27:40 2011 +1300
@@ -376,9 +376,9 @@
         
         EXAMPLES:
             sage: lisp.function_call('sin', ['2'])
-            0.90929741
+            0.9092974
             sage: lisp.sin(2)
-            0.90929741
+            0.9092974
         """
         args, kwds = self._convert_args_kwds(args, kwds)
         self._check_valid_function_name(function)
diff -r b995f0056e8f -r f00392fe6abc sage/interfaces/maxima.py
--- sage/interfaces/maxima.py	Mon Feb 07 12:25:34 2011 +0000
+++ sage/interfaces/maxima.py	Fri Feb 11 12:27:40 2011 +1300
@@ -908,9 +908,12 @@
             p = subprocess.Popen(cmd, shell=True, stdin=subprocess.PIPE,
                              stdout=subprocess.PIPE, stderr=subprocess.PIPE)
             res = p.stdout.read()
-            # we are now getting five lines of commented verbosity
+            # ecl-10.2 : 3 lines
+            # ecl-10.4 : 5 lines
+            # ecl-11.1 : 4 lines fancy a tango?
+            # We now get 4 lines of commented verbosity
             # every time Maxima starts, so we need to get rid of them
-            for _ in range(5):
+            for _ in range(4):
                 res = res[res.find('\n')+1:]
             return AsciiArtString(res)
         else:
@@ -1126,7 +1129,7 @@
         
             sage: f = maxima.function('x', 'sin(x)')
             sage: f(3.2)
-            -.05837414342758009
+            -.058374143427580...
             sage: f = maxima.function('x,y', 'sin(x)+cos(y)')
             sage: f(2,3.5)
             sin(2)-.9364566872907963
@@ -1923,7 +1926,7 @@
         EXAMPLES::
         
             sage: a = maxima('sqrt(2)').numer(); a
-            1.414213562373095
+            1.41421356237309...
             sage: type(a)
             <class 'sage.interfaces.maxima.MaximaElement'>
         """
@@ -2075,7 +2078,7 @@
         EXAMPLES::
         
             sage: maxima('exp(-sqrt(x))').nintegral('x',0,1)
-            (.5284822353142306, 4.163314137883845e-11, 231, 0)
+            (.5284822353142306, 4.16331413788384...e-11, 231, 0)
         
         Note that GP also does numerical integration, and can do so to very
         high precision very quickly::
@@ -2129,7 +2132,7 @@
             sage: f = maxima('exp(x^2)').integral('x',0,1); f   
             -sqrt(%pi)*%i*erf(%i)/2
             sage: f.numer()
-            1.462651745907182
+            1.46265174590718...
         """
         I = ExpectElement.__getattr__(self, 'integrate')
         if min is None:
@@ -2249,7 +2252,7 @@
         EXAMPLES::
         
             sage: maxima('sqrt(2) + I').comma('numer')
-            I+1.414213562373095
+            I+1.41421356237309...
             sage: maxima('sqrt(2) + I*a').comma('a=5')
             5*I+sqrt(2)
         """
diff -r b995f0056e8f -r f00392fe6abc sage/modules/free_module_element.pyx
--- sage/modules/free_module_element.pyx	Mon Feb 07 12:25:34 2011 +0000
+++ sage/modules/free_module_element.pyx	Fri Feb 11 12:27:40 2011 +1300
@@ -2485,15 +2485,11 @@
             sage: type(vec)
             <type 'sage.modules.vector_real_double_dense.Vector_real_double_dense'>
             sage: answers
-            [(0.5, 5.5511151231257843e-15, 21, 0),
-            (0.33333333333333343, 3.7007434154171903e-15, 21, 0),
-            (0.45969769413186018, 5.1036696439228408e-15, 21, 0)]
+            [(0.5, 5.5511151231257843e-15, 21, 0), (0.3333333333333..., 3.7007434154171903e-15, 21, 0), (0.45969769413186..., 5.1036696439228408e-15, 21, 0)]
 
             sage: r=vector([t,0,1], sparse=True)
             sage: r.nintegral(t,0,1)            
-            ((0.5, 0.0, 1.0),
-            {0: (0.5, 5.5511151231257843e-15, 21, 0),
-            2: (1.0, 1.110223024625157e-14, 21, 0)})
+            ((0.5, 0.0, 1.0), {0: (0.5, 5.5511151231257843e-15, 21, 0), 2: (1.0, 1.11022302462515...e-14, 21, 0)})
 
         """
         # If Cython supported lambda functions, we would just do
diff -r b995f0056e8f -r f00392fe6abc sage/symbolic/expression.pyx
--- sage/symbolic/expression.pyx	Mon Feb 07 12:25:34 2011 +0000
+++ sage/symbolic/expression.pyx	Fri Feb 11 12:27:40 2011 +1300
@@ -5515,7 +5515,7 @@
             sage: SR(1.0).cosh()
             1.54308063481524
             sage: maxima('cosh(1.0)')
-            1.543080634815244
+            1.54308063481524...
             sage: SR(1.00000000000000000000000000).cosh()
             1.5430806348152437784779056
             sage: SR(RIF(1)).cosh()
@@ -5624,7 +5624,7 @@
             sage: SR(1.0).arcsinh()
             0.881373587019543
             sage: maxima('asinh(2.0)')
-            1.44363547517881
+            1.4436354751788...
 
         Sage automatically applies certain identities::
 
@@ -5678,7 +5678,7 @@
             sage: SR(CDF(1/2)).arccosh()
             1.0471975512*I
             sage: maxima('acosh(0.5)')
-            1.047197551196598*%i
+            1.04719755119659...*%i
 
         To prevent automatic evaluation use the ``hold`` argument::
 
