--- sage/rings/complex_double.pyx.orig	2012-09-18 12:26:33.000000000 -0500
+++ sage/rings/complex_double.pyx	2012-09-18 12:30:03.000000000 -0500
@@ -630,7 +630,7 @@
     to the rounding errors inherent to finite precision calculations.
     """
     
-    __array_interface__ = {'typestr': '=c16'}
+    __array_interface__ = {'typestr': '=c16', 'shape' : ()}
     
     def __cinit__(self):
         self._parent = _CDF
--- sage/rings/complex_number.pyx.orig	2012-09-18 12:30:15.000000000 -0500
+++ sage/rings/complex_number.pyx	2012-09-18 12:30:58.000000000 -0500
@@ -40,8 +40,8 @@
 
 include "../ext/stdsage.pxi"
 
-cdef object numpy_complex_interface = {'typestr': '=c16'}
-cdef object numpy_object_interface = {'typestr': '|O'}
+cdef object numpy_complex_interface = {'typestr': '=c16', 'shape' : ()}
+cdef object numpy_object_interface = {'typestr': '|O', 'shape' : ()}
 
 cdef mp_rnd_t rnd
 rnd = GMP_RNDN
--- sage/rings/integer.pyx.orig	2012-09-18 12:31:09.000000000 -0500
+++ sage/rings/integer.pyx	2012-09-18 12:34:20.000000000 -0500
@@ -172,9 +172,9 @@
 
 from sage.structure.element import canonical_coercion
 
-cdef object numpy_long_interface = {'typestr': '=i4' if sizeof(long) == 4 else '=i8' }
-cdef object numpy_int64_interface = {'typestr': '=i8'}
-cdef object numpy_object_interface = {'typestr': '|O'}
+cdef object numpy_long_interface = {'typestr': '=i4' if sizeof(long) == 4 else '=i8', 'shape' : ()}
+cdef object numpy_int64_interface = {'typestr': '=i8', 'shape' : ()}
+cdef object numpy_object_interface = {'typestr': '|O', 'shape' : ()}
 
 cdef mpz_t mpz_tmp
 mpz_init(mpz_tmp)
--- sage/rings/rational.pyx.orig	2012-09-18 12:33:18.000000000 -0500
+++ sage/rings/rational.pyx	2012-09-18 12:34:04.000000000 -0500
@@ -78,10 +78,10 @@
 cdef sage.rings.fast_arith.arith_int ai
 ai = sage.rings.fast_arith.arith_int()
 
-cdef object numpy_long_interface = {'typestr': '=i4' if sizeof(long) == 4 else '=i8' }
-cdef object numpy_int64_interface = {'typestr': '=i8'}
-cdef object numpy_object_interface = {'typestr': '|O'}
-cdef object numpy_double_interface = {'typestr': '=f8'}
+cdef object numpy_long_interface = {'typestr': '=i4' if sizeof(long) == 4 else '=i8', 'shape' : ()}
+cdef object numpy_int64_interface = {'typestr': '=i8', 'shape' : ()}
+cdef object numpy_object_interface = {'typestr': '|O', 'shape' : ()}
+cdef object numpy_double_interface = {'typestr': '=f8', 'shape' : ()}
 
 cdef extern from "convert.h":
     ctypedef long* GEN    
--- sage/rings/real_double.pyx.orig	2012-09-18 12:34:35.000000000 -0500
+++ sage/rings/real_double.pyx	2012-09-18 12:35:22.000000000 -0500
@@ -30,7 +30,7 @@
     Test NumPy conversions::
     
         sage: RDF(1).__array_interface__
-        {'typestr': '=f8'}
+        {'typestr': '=f8', 'shape' : ()}
         sage: import numpy
         sage: numpy.array([RDF.pi()]).dtype
         dtype('float64')
@@ -531,7 +531,7 @@
     the rounding errors inherent to finite precision calculations.
     """
     
-    __array_interface__ = {'typestr': '=f8'}
+    __array_interface__ = {'typestr': '=f8', 'shape' : ()}
     
     def __cinit__(self):
         (<Element>self)._parent = _RDF
--- sage/rings/real_mpfr.pyx.orig	2012-09-18 12:35:38.000000000 -0500
+++ sage/rings/real_mpfr.pyx	2012-09-18 12:36:19.000000000 -0500
@@ -167,8 +167,8 @@
 
 _re_skip_zeroes = re.compile(r'^(.+?)0*$')
 
-cdef object numpy_double_interface = {'typestr': '=f8'}
-cdef object numpy_object_interface = {'typestr': '|O'}
+cdef object numpy_double_interface = {'typestr': '=f8', 'shape' : ()}
+cdef object numpy_object_interface = {'typestr': '|O', 'shape' : ()}
 
 # Avoid signal handling for cheap operations when the
 # precision is below this threshold.