diff -Naur src.orig/sage/geometry/hyperbolic_space/hyperbolic_geodesic.py src/sage/geometry/hyperbolic_space/hyperbolic_geodesic.py
--- src.orig/sage/geometry/hyperbolic_space/hyperbolic_geodesic.py	2016-06-17 11:42:21.069870849 +1200
+++ src/sage/geometry/hyperbolic_space/hyperbolic_geodesic.py	2016-06-17 11:57:58.578783287 +1200
@@ -873,20 +873,6 @@
         Return the perpendicular bisector of ``self`` if ``self`` has
         finite length.  Here distance is hyperbolic distance.
 
-        EXAMPLES::
-
-            sage: PD = HyperbolicPlane().PD()
-            sage: g = PD.get_geodesic(-0.3+0.4*I,+0.7-0.1*I)
-            sage: h = g.perpendicular_bisector()
-            sage: P = g.plot(color='blue')+h.plot(color='orange');P
-            Graphics object consisting of 4 graphics primitives
-
-        .. PLOT::
-
-            g = HyperbolicPlane().PD().get_geodesic(-0.3+0.4*I,+0.7-0.1*I)
-            h = g.perpendicular_bisector()
-            sphinx_plot(g.plot(color='blue')+h.plot(color='orange'))
-
         Complete geodesics cannot be bisected::
 
             sage: g = HyperbolicPlane().PD().get_geodesic(0, 1)
@@ -1344,20 +1330,6 @@
             sage: bool(c(g.intersection(h)[0]) - c(g.midpoint()) < 10**-9)
             True
 
-        ::
-
-            sage: UHP = HyperbolicPlane().UHP()
-            sage: g = UHP.get_geodesic(1+I,2+0.5*I)
-            sage: h = g.perpendicular_bisector()
-            sage: show(g.plot(color='blue')+h.plot(color='orange'))
-
-        .. PLOT::
-
-            UHP = HyperbolicPlane().UHP()
-            g = UHP.get_geodesic(1+I,2+0.5*I)
-            h = g.perpendicular_bisector()
-            sphinx_plot(g.plot(color='blue')+h.plot(color='orange'))
-
         Infinite geodesics cannot be bisected::
 
             sage: UHP.get_geodesic(0, 1).perpendicular_bisector()
