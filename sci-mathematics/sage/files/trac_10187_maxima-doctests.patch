diff -r f667e86a25fb -r aac88499e163 sage/calculus/calculus.py
--- a/sage/calculus/calculus.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/calculus/calculus.py	Fri Oct 29 18:09:29 2010 +0100
@@ -341,8 +341,9 @@
 (Trac #9217) is fixed::
 
     sage: taylor(gamma(1/3+x),x,0,3)
-    -1/432*((36*(pi*sqrt(3) + 9*log(3))*euler_gamma^2 + 27*pi^2*log(3) + 72*euler_gamma^3 + 243*log(3)^3 + 18*(6*pi*sqrt(3)*log(3) + pi^2 + 27*log(3)^2)*euler_gamma + 36*(6*euler_gamma + pi*sqrt(3) + 9*log(3))*psi(1, 1/3) + (pi^3 + 81*pi*log(3)^2)*sqrt(3))*gamma(1/3) - 72*gamma(1/3)*psi(2, 1/3))*x^3 + 1/24*(6*pi*sqrt(3)*log(3) + 4*(pi*sqrt(3) + 9*log(3))*euler_gamma + pi^2 + 12*euler_gamma^2 + 27*log(3)^2 + 12*psi(1, 1/3))*x^2*gamma(1/3) - 1/6*(6*euler_gamma + pi*sqrt(3) + 9*log(3))*x*gamma(1/3) + gamma(1/3)
-
+    -1/432*((36*(pi*sqrt(3) + 9*log(3))*euler_gamma^2 + 27*pi^2*log(3) + 72*euler_gamma^3 + 243*log(3)^3 + 18*(6*pi*sqrt(3)*log(3) + pi^2 + 27*log(3)^2 + 12*psi(1, 1/3))*euler_gamma + 324*psi(1, 1/3)*log(3) + (pi^3 + 9*(9*log(3)^2 + 4*psi(1, 1/3))*pi)*sqrt(3))*gamma(1/3) - 72*gamma(1/3)*psi(2, 1/3))*x^3 + 1/24*(6*pi*sqrt(3)*log(3) + 4*(pi*sqrt(3) + 9*log(3))*euler_gamma + pi^2 + 12*euler_gamma^2 + 27*log(3)^2 + 12*psi(1, 1/3))*x^2*gamma(1/3) - 1/6*(6*euler_gamma + pi*sqrt(3) + 9*log(3))*x*gamma(1/3) + gamma(1/3)
+    sage: map(lambda f:f[0].n(), _.coeffs())
+    [2.6789385347..., -8.3905259853..., 26.662447494..., -80.683148377...]
 """
 
 import re
@@ -366,15 +367,12 @@
 
     sage: maxima = Maxima(init_code = ['load(simplify_sum)'])
     sage: maxima('f1')
-    binomial(n,k)
+    f1
     sage: sage.calculus.calculus.maxima('f1')
     f1
 """
 maxima = Maxima(init_code = ['display2d:false', 'domain: complex',
-    'keepfloat: true', 'load(to_poly_solver)', 'load(simplify_sum)',
-    'kill (g1, g2, g3, g4, g5, g6, g7, f1, f2, f3, f4, f5, f6, f7, f8, f9,\
-            f10, h1, h2, h3, h4, h5, h6, h6b, h7, h8, h9, h10, h11, h12, h13,\
-            d1, d2)'],
+                             'keepfloat: true', 'load(to_poly_solver)', 'load(simplify_sum)'],
                 script_subdirectory=None)
 
 ########################################################
@@ -422,6 +420,7 @@
 
     And some truncations thereof::
 
+        sage: assume(n>1)
         sage: symbolic_sum(binomial(n,k),k,1,n)
         2^n - 1
         sage: symbolic_sum(binomial(n,k),k,2,n)
@@ -1146,7 +1145,7 @@
         sage: (z + exp(x)).laplace(x, s)
         z/s + 1/(s - 1)
         sage: log(t/t0).laplace(t, s)
-         -(euler_gamma + log(s) + log(t0))/s
+        -(euler_gamma + log(s) - log(1/t0))/s
          
     We do a formal calculation::
 
diff -r f667e86a25fb -r aac88499e163 sage/calculus/functional.py
--- a/sage/calculus/functional.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/calculus/functional.py	Fri Oct 29 18:09:29 2010 +0100
@@ -236,11 +236,16 @@
     
         sage: integral(abs(x), x, 0, 5)
         25/2
-        sage: integral(abs(x), x, 0, a)
-        integrate(abs(x), x, 0, a)
+        sage: integral(abs(x)*x, x, 0, a)
+        Traceback (most recent call last):
+        ...
+        TypeError: Computation failed since Maxima requested additional 
+        constraints (try the command 'assume(a>0)' before integral or limit 
+        evaluation, for example):
+        Is  a  positive, negative, or zero?
         sage: assume(a>0)
-        sage: integral(abs(x), x, 0, a)
-        1/2*a^2
+        sage: integral(abs(x)*x, x, 0, a)
+        1/3*a^3
         sage: forget()      # forget the assumptions.
     
     We integrate and differentiate a huge mess::
diff -r f667e86a25fb -r aac88499e163 sage/calculus/tests.py
--- a/sage/calculus/tests.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/calculus/tests.py	Fri Oct 29 18:09:29 2010 +0100
@@ -105,7 +105,7 @@
     sage: expand(integrate(log(1-x^2), x))
     x*log(-x^2 + 1) - 2*x - log(x - 1) + log(x + 1)
     sage: integrate(log(1-x^2)/x, x)
-    log(-x^2 + 1)*log(x) + 1/2*polylog(2, -x^2 + 1)
+    1/2*log(-x^2 + 1)*log(x^2) + 1/2*polylog(2, -x^2 + 1)
     sage: integrate(exp(1-x^2),x)
     1/2*sqrt(pi)*e*erf(x)
     sage: integrate(sin(x^2),x)
diff -r f667e86a25fb -r aac88499e163 sage/calculus/wester.py
--- a/sage/calculus/wester.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/calculus/wester.py	Fri Oct 29 18:09:29 2010 +0100
@@ -500,9 +500,9 @@
 
 ::
 
-    sage: # (NO) (Integrate(x)Abs(x))=Abs(x)*x/2
+    sage: # (YES) (Integrate(x)Abs(x))=Abs(x)*x/2
     sage: integral(abs(x), x)
-    integrate(abs(x), x)
+    1/2*x*abs(x)
 
 ::
 
diff -r f667e86a25fb -r aac88499e163 sage/interfaces/maxima.py
--- a/sage/interfaces/maxima.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/interfaces/maxima.py	Fri Oct 29 18:09:29 2010 +0100
@@ -537,7 +537,7 @@
                         init_code = init_code,
                         logfile = logfile,
                         eval_using_file_cutoff=eval_using_file_cutoff)
-        self._display_prompt = '<sage-display>'  # must match what is in the file local/ibn/sage-maxima.lisp!!
+        self._display_prompt = '<sage-display>'  # must match what is in the file local/bin/sage-maxima.lisp!!
         self._output_prompt_re = re.compile('\(\%o[0-9]+\)')
         self._ask = ['zero or nonzero?', 'an integer?', 'positive, negative, or zero?', 
                      'positive or negative?', 'positive or zero?']
@@ -726,6 +726,8 @@
         
         We check that errors are correctly checked::
         
+            sage: maxima._eval_line('1+1;')
+            '2'
             sage: maxima.eval('sage0: x == x;')
             Traceback (most recent call last):
             ...
@@ -2768,7 +2770,7 @@
     
         sage: from sage.interfaces.maxima import maxima_console
         sage: maxima_console()                    # not tested
-        Maxima 5.16.3 http://maxima.sourceforge.net
+        Maxima 5.22.1 http://maxima.sourceforge.net
         ...
     """
     os.system('maxima')
@@ -2779,7 +2781,7 @@
     
         sage: from sage.interfaces.maxima import maxima_version
         sage: maxima_version()
-        '5.20.1'
+        '5.22.1'
     """
     return os.popen('maxima --version').read().split()[-1]
 
diff -r f667e86a25fb -r aac88499e163 sage/misc/functional.py
--- a/sage/misc/functional.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/misc/functional.py	Fri Oct 29 18:09:29 2010 +0100
@@ -702,10 +702,10 @@
 
     Numerical approximation::
 
-        sage: h = integral(sin(x)/x^2, (x, 1, pi/2)); h
-        integrate(sin(x)/x^2, x, 1, 1/2*pi)
-        sage: h.n()
-        0.339447940978915...
+        sage: h = integral(tan(x)/x, (x, 1, pi/3)); h 
+        integrate(tan(x)/x, x, 1, 1/3*pi) 
+        sage: h.n()                                   
+        0.07571599101...
 
     Specific algorithm can be used for integration::
 
diff -r f667e86a25fb -r aac88499e163 sage/plot/plot3d/transform.pyx
--- a/sage/plot/plot3d/transform.pyx	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/plot/plot3d/transform.pyx	Fri Oct 29 18:09:29 2010 +0100
@@ -213,12 +213,11 @@
         And simplify every single entry (which is more effective that simplify
         the whole matrix like above):
         
-            sage: m = m.parent()([x.simplify_rational() for x in m._list()])
+            sage: m = m.parent()([x.simplify_full() for x in m._list()])
             sage: m
-            [                                             -(cos(theta) - 1)*x^2 + cos(theta)                 -(cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*x - sqrt(z^2)*sin(theta)         -((cos(theta) - 1)*x*z^2 - sqrt(-x^2 - z^2 + 1)*sqrt(z^2)*sin(theta))/z]
-            [                -(cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*x + sqrt(z^2)*sin(theta)                                 (cos(theta) - 1)*x^2 + (cos(theta) - 1)*z^2 + 1 -((cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*sqrt(z^2)*z + x*z*sin(theta))/sqrt(z^2)]
-            [        -((cos(theta) - 1)*x*z^2 + sqrt(-x^2 - z^2 + 1)*sqrt(z^2)*sin(theta))/z -((cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*sqrt(z^2)*z - x*z*sin(theta))/sqrt(z^2)                                              -(cos(theta) - 1)*z^2 + cos(theta)]
-            
+            [                                       -(cos(theta) - 1)*x^2 + cos(theta)              -(cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*x + sin(theta)*abs(z)      -((cos(theta) - 1)*x*z^2 + sqrt(-x^2 - z^2 + 1)*sin(theta)*abs(z))/z]
+            [             -(cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*x - sin(theta)*abs(z)                           (cos(theta) - 1)*x^2 + (cos(theta) - 1)*z^2 + 1 -((cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*z*abs(z) - x*z*sin(theta))/abs(z)]
+            [     -((cos(theta) - 1)*x*z^2 - sqrt(-x^2 - z^2 + 1)*sin(theta)*abs(z))/z -((cos(theta) - 1)*sqrt(-x^2 - z^2 + 1)*z*abs(z) + x*z*sin(theta))/abs(z)                                        -(cos(theta) - 1)*z^2 + cos(theta)]
             
         Re-expressing some entries in terms of y and resolving the absolute 
         values introduced by eliminating y, we get the desired result. 
diff -r f667e86a25fb -r aac88499e163 sage/symbolic/expression.pyx
--- a/sage/symbolic/expression.pyx	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/symbolic/expression.pyx	Fri Oct 29 18:09:29 2010 +0100
@@ -6315,7 +6315,7 @@
             sage: t = log(sqrt(2) - 1) + log(sqrt(2) + 1); t
             log(sqrt(2) - 1) + log(sqrt(2) + 1)
             sage: res = t.maxima_methods().logcontract(); res
-            0
+            log((sqrt(2) - 1)*(sqrt(2) + 1))
             sage: type(res)
             <type 'sage.symbolic.expression.Expression'>
         """
@@ -6348,8 +6348,9 @@
     
     def simplify_full(self):
         """
-        Applies simplify_factorial, simplify_trig, simplify_rational, and simplify_radical
-        to self (in that order).
+        Applies simplify_factorial, simplify_trig, simplify_rational,
+        simplify_radical, simplify_log, and again simplify_rational to
+        self (in that order).
         
         ALIAS: simplify_full and full_simplify are the same.
         
@@ -6385,6 +6386,7 @@
         x = x.simplify_rational()
         x = x.simplify_radical()
         x = x.simplify_log('one')
+        x = x.simplify_rational()
         return x
 
     full_simplify = simplify_full
@@ -6746,9 +6748,15 @@
 
         TESTS:
         
-        This shows that the issue at trac #7344 is fixed:: 
-
-            sage: (log(sqrt(2)-1)+log(sqrt(2)+1)).simplify_full()
+        This shows that the issue at trac #7334 is fixed. Maxima intentionally 
+        keeps the expression inside the log factored::
+
+            sage: log_expr = (log(sqrt(2)-1)+log(sqrt(2)+1))
+            sage: log_expr.simplify_log('all')
+            log((sqrt(2) - 1)*(sqrt(2) + 1))
+            sage: _.simplify_rational()
+            0
+            sage: log_expr.simplify_full()   # applies both simplify_log and simplify_rational
             0
             
         AUTHORS:
@@ -7344,9 +7352,9 @@
         The following examples show use of the keyword ``to_poly_solve``::
 
             sage: solve(abs(1-abs(1-x)) == 10, x)
-            []
+            [abs(abs(x - 1) - 1) == 10]
             sage: solve(abs(1-abs(1-x)) == 10, x, to_poly_solve=True)
-            [x == 12, x == -10]
+            [x == -10, x == 12]
 
             sage: var('Q')
             Q
@@ -7360,7 +7368,7 @@
         assumed to be an integer, a real if with ``r``, and so on::
 
             sage: solve( sin(x)==cos(x), x, to_poly_solve=True)
-            [x == 1/4*pi + pi*z45]
+            [x == 1/4*pi + pi*z44]
         
         An effort is made to only return solutions that satisfy the current assumptions::
         
@@ -7400,7 +7408,7 @@
             sage: from sage.calculus.calculus import maxima
             sage: sol = maxima(cos(x)==0).to_poly_solve(x)
             sage: sol.sage()
-            [[x == -1/2*pi + 2*pi*z57], [x == 1/2*pi + 2*pi*z59]]
+            [[x == -1/2*pi + 2*pi*z56], [x == 1/2*pi + 2*pi*z58]]
 
         If a returned unsolved expression has a denominator, but the
         original one did not, this may also be true::
@@ -7410,7 +7418,7 @@
             sage: from sage.calculus.calculus import maxima
             sage: sol = maxima(cos(x) * sin(x) == 1/2).to_poly_solve(x)
             sage: sol.sage()
-            [[x == 1/4*pi + pi*z73]]
+            [[x == 1/4*pi + pi*z72]]
 
         Some basic inequalities can be also solved::
 
@@ -7467,8 +7475,7 @@
         ::
 
             sage: solve(sin(x)==1/2,x,to_poly_solve='force')
-            [x == 5/6*pi + 2*pi*z87, x == 1/6*pi + 2*pi*z85] 
-
+            [x == 5/6*pi + 2*pi*z86, x == 1/6*pi + 2*pi*z84]
         """
         import operator
         cdef Expression ex
@@ -7685,7 +7692,7 @@
             sage: b.solve(t)
             []
             sage: b.solve(t, to_poly_solve=True)
-            [t == 1/450*I*pi*z99 + 1/900*log(3/4*sqrt(41) + 25/4), t == 1/450*I*pi*z97 + 1/900*log(-3/4*sqrt(41) + 25/4)]
+            [t == 1/450*I*pi*z98 + 1/900*log(3/4*sqrt(41) + 25/4), t == 1/450*I*pi*z96 + 1/900*log(-3/4*sqrt(41) + 25/4)]
             sage: n(1/900*log(-3/4*sqrt(41) + 25/4))
             0.000411051404934985
 
@@ -8029,6 +8036,7 @@
 
         A well known binomial identity::
 
+            sage: assume(n>=0)
             sage: binomial(n,k).sum(k, 0, n)
             2^n
 
diff -r f667e86a25fb -r aac88499e163 sage/symbolic/integration/integral.py
--- a/sage/symbolic/integration/integral.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/symbolic/integration/integral.py	Fri Oct 29 18:09:29 2010 +0100
@@ -183,10 +183,10 @@
         EXAMPLES::
 
             sage: from sage.symbolic.integration.integral import definite_integral
-            sage: h = definite_integral(sin(x)/x^2, x, 1, 2); h
-            integrate(sin(x)/x^2, x, 1, 2)
+            sage: h = definite_integral(sin(x)*log(x)/x^2, x, 1, 2); h
+            integrate(log(x)*sin(x)/x^2, x, 1, 2)
             sage: h.n() # indirect doctest
-            0.4723991772689525...
+            0.14839875208053...
 
         TESTS:
 
@@ -457,13 +457,10 @@
     TESTS:
 
     The following integral was broken prior to Maxima 5.15.0 -
-    see #3013
-
-    ::
+    see #3013::
 
         sage: integrate(sin(x)*cos(10*x)*log(x), x)
-        1/18*log(x)*cos(9*x) - 1/22*log(x)*cos(11*x) - 1/18*integrate(cos(9*x)/x, x) + 1/22*integrate(cos(11*x)/x, x)
-        
+        1/198*(11*cos(9*x) - 9*cos(11*x))*log(x) + 1/44*Ei(-11*I*x) - 1/36*Ei(-9*I*x) - 1/36*Ei(9*I*x) + 1/44*Ei(11*I*x)
 
     It is no longer possible to use certain functions without an
     explicit variable.  Instead, evaluate the function at a variable,
@@ -484,7 +481,15 @@
         sage: _ = var('x,y')
         sage: f = log(x^2+y^2)
         sage: res = integral(f,x,0.0001414, 1.); res
-        2.0*y*arctan(1/y) - 2.0*y*arctan(0.0001414/y) - 0.0001414*log(y^2 + 1.999396e-08) + log(y^2 + 1.0) - 1.9997172
+        Traceback (most recent call last):
+        ...
+        TypeError: Computation failed since Maxima requested additional 
+        constraints (try the command 'assume((y-1)*(y+1)>0)' before integral 
+        or limit evaluation, for example):
+        Is  (y-1)*(y+1)  positive, negative, or zero?
+        sage: assume(y>1)
+        sage: res = integral(f,x,0.0001414, 1.); res
+        2*y*arctan(1/y) - 2*y*arctan(0.0001414/y) - 0.0001414*log(y^2 + 1.999396e-08) + log(y^2 + 1.0) - 1.9997172
         sage: nres = numerical_integral(f.subs(y=2), 0.0001414, 1.); nres
         (1.4638323264144..., 1.6251803529759...e-14)
         sage: res.subs(y=2).n()
@@ -546,6 +551,15 @@
         sage: x.integral()
         doctest:...: DeprecationWarning: Variable of integration should be specified explicitly.
         1/2*x^2
+
+    Test that #8729 is fixed::
+
+        sage: t = var('t')
+        sage: a = sqrt((sin(t))^2 + (cos(t))^2)
+        sage: integrate(a, t, 0, 2*pi)
+        2*pi
+        sage: a.simplify_full().simplify_trig()
+        1
     """           
     if isinstance(v, (list, tuple)) and a is None and b is None:
         if len(v)==1: # bare variable in a tuple
diff -r f667e86a25fb -r aac88499e163 sage/symbolic/maxima_wrapper.py
--- a/sage/symbolic/maxima_wrapper.py	Thu Oct 21 15:01:01 2010 -0700
+++ b/sage/symbolic/maxima_wrapper.py	Fri Oct 29 18:09:29 2010 +0100
@@ -44,7 +44,7 @@
             sage: type(u)
             <class 'sage.symbolic.maxima_wrapper.MaximaWrapper'>
             sage: u.logcontract()
-            0
+            log((sqrt(2) - 1)*(sqrt(2) + 1))
             sage: u.logcontract().parent()
             Symbolic Ring
 
